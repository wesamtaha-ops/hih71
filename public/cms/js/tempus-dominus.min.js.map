{"version":3,"names":["tempusDominus","$","luxon","_interopDefaultLegacy","e","default","_interopNamespace","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","Unit","$__default","luxon__namespace","twoDigitTemplate","month","day","year","hour","minute","second","hour12","twoDigitTwentyFourTemplate","getFormatByUnit","unit","dateStyle","DateTime","Date","constructor","super","arguments","this","locale","nonLeapLadder","leapLadder","setLocale","value","static","date","Error","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","input","localization","clone","hours","minutes","seconds","startOf","startOfTheWeek","undefined","setMilliseconds","setSeconds","setMinutes","setHours","weekDay","goBack","manipulate","setDate","setMonth","endOf","endOfWeek","format","template","Intl","DateTimeFormat","isBefore","compare","valueOf","isAfter","isSame","convert","isBetween","left","right","inclusivity","leftInclusivity","rightInclusivity","parts","timeStyle","formatToParts","filter","x","type","secondsFormatted","minutesFormatted","hoursFormatted","twelveHoursFormatted","meridiem","find","p","dateFormatted","getDay","targetMonth","endOfMonth","monthFormatted","setFullYear","week","ordinal","computeOrdinal","weekday","getUTCDay","weekNumber","Math","floor","weeksInWeekYear","weekYear","p1","last","p2","isLeapYear","TdError","NAME","Namespace","dataKey","events","Events","key","change","update","error","show","hide","blur","focus","keyup","keydown","css","Css","widget","calendarHeader","switch","toolbar","noHighlight","sideBySide","previous","next","disabled","old","new","active","dateContainer","decadesContainer","decade","yearsContainer","monthsContainer","daysContainer","calendarWeeks","dayOfTheWeek","today","weekend","timeContainer","separator","clockContainer","hourContainer","minuteContainer","secondContainer","toggleMeridiem","collapsing","collapse","inline","lightTheme","darkTheme","isDarkPreferredQuery","errorMessages","ErrorMessages","base","failedToSetInvalidDate","failedToParseInput","unexpectedOption","optionName","code","unexpectedOptions","join","unexpectedOptionValue","badValue","validOptions","typeMismatch","badType","expectedType","numbersOutOfRange","lower","upper","failedToParseDate","soft","console","warn","mustProvideElement","subscribeMismatch","conflictingConfiguration","message","customDateFormatError","dateString","throwError","ServiceLocator","cache","Map","locate","identifier","service","set","serviceLocator","CalendarModes","name","className","step","OptionsStore","_currentCalendarViewMode","_viewDate","minimumCalendarViewMode","currentView","currentCalendarViewMode","viewDate","v","options","refreshCurrentView","Validation","optionsStore","isValid","targetDate","granularity","restrictions","disabledDates","length","_isInDisabledDates","enabledDates","_isInEnabledDates","daysOfWeekDisabled","indexOf","minDate","maxDate","disabledHours","_isInDisabledHours","enabledHours","_isInEnabledHours","disabledTimeIntervals","from","to","testDate","formattedDate","EventEmitter","subscribers","subscribe","callback","push","unsubscribe","bind","index","splice","emit","destroy","EventEmitters","triggerEvent","viewUpdate","updateDisplay","action","updateViewDate","DefaultOptions","display","icons","time","up","down","clear","close","viewMode","toolbarPlacement","keepOpen","buttons","components","calendar","decades","clock","useTwentyfourHour","theme","stepping","useCurrent","defaultDate","selectMonth","previousMonth","nextMonth","selectYear","previousYear","nextYear","selectDecade","previousDecade","nextDecade","previousCentury","nextCentury","pickHour","incrementHour","decrementHour","pickMinute","incrementMinute","decrementMinute","pickSecond","incrementSecond","decrementSecond","selectTime","selectDate","dayViewHeaderFormat","dateFormats","LTS","LT","L","LL","LLL","LLLL","keepInvalid","debug","allowInputToggle","multipleDates","multipleDatesSeparator","promptTimeOnDateChange","promptTimeOnDateChangeTransitionDelay","meta","container","tryConvertToDateTime","dateTime","fromString","JSON","stringify","convertToDateTime","converted","typeCheckDateArray","providedType","Array","isArray","i","typeCheckNumberArray","some","mandatoryDate","optionalDate","mandatory","args","numbersInRange","validHourRange","validDateArray","validKeyOption","keyOptions","path","includes","substring","optionProcessors","freeze","valueObject","vk","subOptionName","HTMLElement","Element","appendChild","defaultType","defaultProcessor","toString","processKey","OptionConverter","o","inputElement","deepCopy","paths","obj","charAt","slice","split","reduce","isValue","provided","copyTo","defaultOptions","objectPath","unsupportedOptions","flattenedOptions","getFlattenDefaultOptions","errors","map","didYouMean","y","defaultOptionValue","lastIndexOf","ignoreProperties","spread","providedOptions","mergeTo","newConfig","element","eData","parse","dataset","tdTargetInput","tdTargetToggle","DOMStringMap","dataOptions","objectToNormalized","object","lowered","toLowerCase","rabbitHole","optionSubgroup","keyOption","internalObject","optionsLower","startsWith","_mergeOptions","_flattenDefaults","deepKeys","t","pre","entries","flatMap","config","a","Dates","_dates","validation","_eventEmitters","picked","lastPicked","lastPickedIndex","formatInput","parseInput","dateConversion","setFromInput","setValue","add","isPicked","innerDateFormatted","pickedIndex","unset","oldDate","isClear","factor","startYear","updateInput","target","newValue","noIndex","round","reason","ActionTypes","ActionTypes$1","DateDisplay","dates","getPicker","document","createElement","classList","append","_daysOfTheWeek","div","setAttribute","selectDay","_update","paint","getElementsByClassName","switcher","parentElement","getElementsByTagName","remove","innerDate","querySelectorAll","containerClone","contains","innerText","classes","row","htmlDivElement","MonthDisplay","YearDisplay","_startYear","_endYear","DecadeDisplay","start","end","getStartEndYear","_startDecade","_endDecade","pickedYears","textContent","startDecadeYear","endDecadeYear","TimeDisplay","_gridColumns","iconTag","_grid","timesDiv","querySelector","incrementHours","decrementHours","incrementMinutes","decrementMinutes","incrementSeconds","decrementSeconds","toggle","style","gridTemplateAreas","top","middle","bottom","upIcon","downIcon","separatorColon","cloneNode","innerHTML","getSeparator","colon","divElement","showHours","showMinutes","showSeconds","button","trim","HourDisplay","selectHour","MinuteDisplay","selectMinute","secondDisplay","selectSecond","Collapse","height","setTimeout","showImmediately","getTransitionDurationFromElement","scrollHeight","getBoundingClientRect","offsetHeight","hideImmediately","transitionDuration","transitionDelay","window","getComputedStyle","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","Display","_isVisible","_documentClickEvent","composedPath","_actionsClickEvent","dateDisplay","monthDisplay","yearDisplay","decadeDisplay","timeDisplay","hourDisplay","minuteDisplay","_widget","result","isVisible","_hasTime","_updateCalendarHeader","_hasDate","_unit","_date","_classes","_element","tries","direction","_buildWidget","_updateTheme","onlyClock","showClock","_showMode","body","createPopup","modifiers","enabled","placement","documentElement","dir","then","addEventListener","updatePopup","async","createPopperFunction","Popper","createPopper","import","_popperInstance","max","min","datePickerMode","picker","_getThemeClass","matchMedia","removeEventListener","currentTheme","isDarkMode","matches","showing","getAttribute","_dispose","parentNode","removeChild","dateView","getHeadTemplate","timeView","_iconTag","getToolbarElements","arrow","title","icon","togglePicker","changeCalendarView","iconClass","svg","createElementNS","_rebuild","wasVisible","Actions","do","currentTarget","handleNextPrevious","hideOrClock","manipulateAndSet","outerHTML","handleShowClockContainers","htmlElement","classToUse","newDate","TempusDominus","_subscribers","_isDisabled","_inputChangeEvent","event","internallyTriggered","detail","setViewDate","valueSplit","_toggleClickEvent","actions","_initializeOptions","_initializeInput","_initializeToggle","_triggerEvent","_viewUpdate","updateOptions","reset","disable","enable","removeAttribute","eventTypes","callbacks","callBackArray","returnArray","eventType","_unsubscribe","dispose","_toggle","language","asked","loadedLocales","isChangeEvent","_handleAfterChangeEvent","dispatchEvent","CustomEvent","jQuery","trigger","_publish","eventName","includeDataset","_dataToOptions","_validateConflicts","findIndex","dayPeriod","tagName","query","clearTimeout","_currentPromptTimeTimeout","loadLocale","l","extend","plugin","option","installed","tempusDominus$1","version","__proto__","_","tdClasses","tdFactory","prototype","opts","parsedDate","fromFormat","toJSDate","getTime","outputCalendar","fromJSDate","toFormat","jQueryInterface","argument","jQueryHandleThis","each","me","data","isDateUpdateThroughDateOptionFromClientCode","ret","JQUERY_NO_CONFLICT","fn","Constructor","noConflict"],"sources":["./dist/js/tempus-dominus.js"],"sourcesContent":["/*!\n  * Tempus Dominus v6.2.7 (https://getdatepicker.com/)\n  * Copyright 2013-2022 Jonathan Peterson\n  * Licensed under MIT (https://github.com/Eonasdan/tempus-dominus/blob/master/LICENSE)\n  */\nvar tempusDominus = (function ($, luxon) {\n  'use strict';\n\n  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n      Object.keys(e).forEach(function (k) {\n        if (k !== 'default') {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function () { return e[k]; }\n          });\n        }\n      });\n    }\n    n[\"default\"] = e;\n    return n;\n  }\n\n  var $__default = /*#__PURE__*/_interopDefaultLegacy($);\n  var luxon__namespace = /*#__PURE__*/_interopNamespace(luxon);\n\n  var Unit;\r\n  (function (Unit) {\r\n      Unit[\"seconds\"] = \"seconds\";\r\n      Unit[\"minutes\"] = \"minutes\";\r\n      Unit[\"hours\"] = \"hours\";\r\n      Unit[\"date\"] = \"date\";\r\n      Unit[\"month\"] = \"month\";\r\n      Unit[\"year\"] = \"year\";\r\n  })(Unit || (Unit = {}));\r\n  const twoDigitTemplate = {\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit',\r\n      hour12: true,\r\n  };\r\n  const twoDigitTwentyFourTemplate = {\r\n      hour: '2-digit',\r\n      hour12: false\r\n  };\r\n  const getFormatByUnit = (unit) => {\r\n      switch (unit) {\r\n          case 'date':\r\n              return { dateStyle: 'short' };\r\n          case 'month':\r\n              return {\r\n                  month: 'numeric',\r\n                  year: 'numeric'\r\n              };\r\n          case 'year':\r\n              return { year: 'numeric' };\r\n      }\r\n  };\r\n  /**\r\n   * For the most part this object behaves exactly the same way\r\n   * as the native Date object with a little extra spice.\r\n   */\r\n  class DateTime extends Date {\r\n      constructor() {\r\n          super(...arguments);\r\n          /**\r\n           * Used with Intl.DateTimeFormat\r\n           */\r\n          this.locale = 'default';\r\n          this.nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n          this.leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];\r\n      }\r\n      /**\r\n       * Chainable way to set the {@link locale}\r\n       * @param value\r\n       */\r\n      setLocale(value) {\r\n          this.locale = value;\r\n          return this;\r\n      }\r\n      /**\r\n       * Converts a plain JS date object to a DateTime object.\r\n       * Doing this allows access to format, etc.\r\n       * @param  date\r\n       * @param locale\r\n       */\r\n      static convert(date, locale = 'default') {\r\n          if (!date)\r\n              throw new Error(`A date is required`);\r\n          return new DateTime(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()).setLocale(locale);\r\n      }\r\n      /**\r\n       * Attempts to create a DateTime from a string. A customDateFormat is required for non US dates.\r\n       * @param input\r\n       * @param localization\r\n       */\r\n      static fromString(input, localization) {\r\n          return new DateTime(input);\r\n      }\r\n      /**\r\n       * Native date manipulations are not pure functions. This function creates a duplicate of the DateTime object.\r\n       */\r\n      get clone() {\r\n          return new DateTime(this.year, this.month, this.date, this.hours, this.minutes, this.seconds, this.getMilliseconds()).setLocale(this.locale);\r\n      }\r\n      /**\r\n       * Sets the current date to the start of the {@link unit} provided\r\n       * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).startOf('month')\r\n       * would return April 1, 2021, 12:00:00.000 AM (midnight)\r\n       * @param unit\r\n       * @param startOfTheWeek Allows for the changing the start of the week.\r\n       */\r\n      startOf(unit, startOfTheWeek = 0) {\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          switch (unit) {\r\n              case 'seconds':\r\n                  this.setMilliseconds(0);\r\n                  break;\r\n              case 'minutes':\r\n                  this.setSeconds(0, 0);\r\n                  break;\r\n              case 'hours':\r\n                  this.setMinutes(0, 0, 0);\r\n                  break;\r\n              case 'date':\r\n                  this.setHours(0, 0, 0, 0);\r\n                  break;\r\n              case 'weekDay':\r\n                  this.startOf(Unit.date);\r\n                  if (this.weekDay === startOfTheWeek)\r\n                      break;\r\n                  let goBack = this.weekDay;\r\n                  if (startOfTheWeek !== 0 && this.weekDay === 0)\r\n                      goBack = 8 - startOfTheWeek;\r\n                  this.manipulate(startOfTheWeek - goBack, Unit.date);\r\n                  break;\r\n              case 'month':\r\n                  this.startOf(Unit.date);\r\n                  this.setDate(1);\r\n                  break;\r\n              case 'year':\r\n                  this.startOf(Unit.date);\r\n                  this.setMonth(0, 1);\r\n                  break;\r\n          }\r\n          return this;\r\n      }\r\n      /**\r\n       * Sets the current date to the end of the {@link unit} provided\r\n       * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).endOf('month')\r\n       * would return April 30, 2021, 11:59:59.999 PM\r\n       * @param unit\r\n       * @param startOfTheWeek\r\n       */\r\n      endOf(unit, startOfTheWeek = 0) {\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          switch (unit) {\r\n              case 'seconds':\r\n                  this.setMilliseconds(999);\r\n                  break;\r\n              case 'minutes':\r\n                  this.setSeconds(59, 999);\r\n                  break;\r\n              case 'hours':\r\n                  this.setMinutes(59, 59, 999);\r\n                  break;\r\n              case 'date':\r\n                  this.setHours(23, 59, 59, 999);\r\n                  break;\r\n              case 'weekDay':\r\n                  this.endOf(Unit.date);\r\n                  const endOfWeek = (6 + startOfTheWeek);\r\n                  if (this.weekDay === endOfWeek)\r\n                      break;\r\n                  this.manipulate(endOfWeek - this.weekDay, Unit.date);\r\n                  break;\r\n              case 'month':\r\n                  this.endOf(Unit.date);\r\n                  this.manipulate(1, Unit.month);\r\n                  this.setDate(0);\r\n                  break;\r\n              case 'year':\r\n                  this.endOf(Unit.date);\r\n                  this.setMonth(11, 31);\r\n                  break;\r\n          }\r\n          return this;\r\n      }\r\n      /**\r\n       * Change a {@link unit} value. Value can be positive or negative\r\n       * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).manipulate(1, 'month')\r\n       * would return May 30, 2021, 11:45:32.984 AM\r\n       * @param value A positive or negative number\r\n       * @param unit\r\n       */\r\n      manipulate(value, unit) {\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          this[unit] += value;\r\n          return this;\r\n      }\r\n      /**\r\n       * Returns a string format.\r\n       * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\r\n       * for valid templates and locale objects\r\n       * @param template An object. Uses browser defaults otherwise.\r\n       * @param locale Can be a string or an array of strings. Uses browser defaults otherwise.\r\n       */\r\n      format(template, locale = this.locale) {\r\n          return new Intl.DateTimeFormat(locale, template).format(this);\r\n      }\r\n      /**\r\n       * Return true if {@link compare} is before this date\r\n       * @param compare The Date/DateTime to compare\r\n       * @param unit If provided, uses {@link startOf} for\r\n       * comparision.\r\n       */\r\n      isBefore(compare, unit) {\r\n          if (!unit)\r\n              return this.valueOf() < compare.valueOf();\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          return (this.clone.startOf(unit).valueOf() < compare.clone.startOf(unit).valueOf());\r\n      }\r\n      /**\r\n       * Return true if {@link compare} is after this date\r\n       * @param compare The Date/DateTime to compare\r\n       * @param unit If provided, uses {@link startOf} for\r\n       * comparision.\r\n       */\r\n      isAfter(compare, unit) {\r\n          if (!unit)\r\n              return this.valueOf() > compare.valueOf();\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          return (this.clone.startOf(unit).valueOf() > compare.clone.startOf(unit).valueOf());\r\n      }\r\n      /**\r\n       * Return true if {@link compare} is same this date\r\n       * @param compare The Date/DateTime to compare\r\n       * @param unit If provided, uses {@link startOf} for\r\n       * comparision.\r\n       */\r\n      isSame(compare, unit) {\r\n          if (!unit)\r\n              return this.valueOf() === compare.valueOf();\r\n          if (this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          compare = DateTime.convert(compare);\r\n          return (this.clone.startOf(unit).valueOf() === compare.startOf(unit).valueOf());\r\n      }\r\n      /**\r\n       * Check if this is between two other DateTimes, optionally looking at unit scale. The match is exclusive.\r\n       * @param left\r\n       * @param right\r\n       * @param unit.\r\n       * @param inclusivity. A [ indicates inclusion of a value. A ( indicates exclusion.\r\n       * If the inclusivity parameter is used, both indicators must be passed.\r\n       */\r\n      isBetween(left, right, unit, inclusivity = '()') {\r\n          if (unit && this[unit] === undefined)\r\n              throw new Error(`Unit '${unit}' is not valid`);\r\n          const leftInclusivity = inclusivity[0] === '(';\r\n          const rightInclusivity = inclusivity[1] === ')';\r\n          return (leftInclusivity\r\n              ? this.isAfter(left, unit)\r\n              : !this.isBefore(left, unit)) &&\r\n              (rightInclusivity\r\n                  ? this.isBefore(right, unit)\r\n                  : !this.isAfter(right, unit)) ||\r\n              (leftInclusivity\r\n                  ? this.isBefore(left, unit)\r\n                  : !this.isAfter(left, unit)) &&\r\n                  (rightInclusivity\r\n                      ? this.isAfter(right, unit)\r\n                      : !this.isBefore(right, unit));\r\n      }\r\n      /**\r\n       * Returns flattened object of the date. Does not include literals\r\n       * @param locale\r\n       * @param template\r\n       */\r\n      parts(locale = this.locale, template = { dateStyle: 'full', timeStyle: 'long' }) {\r\n          const parts = {};\r\n          new Intl.DateTimeFormat(locale, template)\r\n              .formatToParts(this)\r\n              .filter((x) => x.type !== 'literal')\r\n              .forEach((x) => (parts[x.type] = x.value));\r\n          return parts;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getSeconds()\r\n       */\r\n      get seconds() {\r\n          return this.getSeconds();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setSeconds()\r\n       */\r\n      set seconds(value) {\r\n          this.setSeconds(value);\r\n      }\r\n      /**\r\n       * Returns two digit hours\r\n       */\r\n      get secondsFormatted() {\r\n          return this.parts(undefined, twoDigitTemplate).second;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getMinutes()\r\n       */\r\n      get minutes() {\r\n          return this.getMinutes();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setMinutes()\r\n       */\r\n      set minutes(value) {\r\n          this.setMinutes(value);\r\n      }\r\n      /**\r\n       * Returns two digit minutes\r\n       */\r\n      get minutesFormatted() {\r\n          return this.parts(undefined, twoDigitTemplate).minute;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getHours()\r\n       */\r\n      get hours() {\r\n          return this.getHours();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setHours()\r\n       */\r\n      set hours(value) {\r\n          this.setHours(value);\r\n      }\r\n      /**\r\n       * Returns two digit hours\r\n       */\r\n      get hoursFormatted() {\r\n          return this.parts(undefined, twoDigitTwentyFourTemplate).hour;\r\n      }\r\n      /**\r\n       * Returns two digit hours but in twelve hour mode e.g. 13 -> 1\r\n       */\r\n      get twelveHoursFormatted() {\r\n          return this.parts(undefined, twoDigitTemplate).hour;\r\n      }\r\n      /**\r\n       * Get the meridiem of the date. E.g. AM or PM.\r\n       * If the {@link locale} provides a \"dayPeriod\" then this will be returned,\r\n       * otherwise it will return AM or PM.\r\n       * @param locale\r\n       */\r\n      meridiem(locale = this.locale) {\r\n          return new Intl.DateTimeFormat(locale, {\r\n              hour: 'numeric',\r\n              hour12: true\r\n          })\r\n              .formatToParts(this)\r\n              .find((p) => p.type === 'dayPeriod')?.value;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getDate()\r\n       */\r\n      get date() {\r\n          return this.getDate();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setDate()\r\n       */\r\n      set date(value) {\r\n          this.setDate(value);\r\n      }\r\n      /**\r\n       * Return two digit date\r\n       */\r\n      get dateFormatted() {\r\n          return this.parts(undefined, twoDigitTemplate).day;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getDay()\r\n       */\r\n      get weekDay() {\r\n          return this.getDay();\r\n      }\r\n      /**\r\n       * Shortcut to Date.getMonth()\r\n       */\r\n      get month() {\r\n          return this.getMonth();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setMonth()\r\n       */\r\n      set month(value) {\r\n          const targetMonth = new Date(this.year, value + 1);\r\n          targetMonth.setDate(0);\r\n          const endOfMonth = targetMonth.getDate();\r\n          if (this.date > endOfMonth) {\r\n              this.date = endOfMonth;\r\n          }\r\n          this.setMonth(value);\r\n      }\r\n      /**\r\n       * Return two digit, human expected month. E.g. January = 1, December = 12\r\n       */\r\n      get monthFormatted() {\r\n          return this.parts(undefined, twoDigitTemplate).month;\r\n      }\r\n      /**\r\n       * Shortcut to Date.getFullYear()\r\n       */\r\n      get year() {\r\n          return this.getFullYear();\r\n      }\r\n      /**\r\n       * Shortcut to Date.setFullYear()\r\n       */\r\n      set year(value) {\r\n          this.setFullYear(value);\r\n      }\r\n      // borrowed a bunch of stuff from Luxon\r\n      /**\r\n       * Gets the week of the year\r\n       */\r\n      get week() {\r\n          const ordinal = this.computeOrdinal(), weekday = this.getUTCDay();\r\n          let weekNumber = Math.floor((ordinal - weekday + 10) / 7);\r\n          if (weekNumber < 1) {\r\n              weekNumber = this.weeksInWeekYear(this.year - 1);\r\n          }\r\n          else if (weekNumber > this.weeksInWeekYear(this.year)) {\r\n              weekNumber = 1;\r\n          }\r\n          return weekNumber;\r\n      }\r\n      weeksInWeekYear(weekYear) {\r\n          const p1 = (weekYear +\r\n              Math.floor(weekYear / 4) -\r\n              Math.floor(weekYear / 100) +\r\n              Math.floor(weekYear / 400)) %\r\n              7, last = weekYear - 1, p2 = (last +\r\n              Math.floor(last / 4) -\r\n              Math.floor(last / 100) +\r\n              Math.floor(last / 400)) %\r\n              7;\r\n          return p1 === 4 || p2 === 3 ? 53 : 52;\r\n      }\r\n      get isLeapYear() {\r\n          return this.year % 4 === 0 && (this.year % 100 !== 0 || this.year % 400 === 0);\r\n      }\r\n      computeOrdinal() {\r\n          return this.date + (this.isLeapYear ? this.leapLadder : this.nonLeapLadder)[this.month];\r\n      }\r\n  }\n\n  class TdError extends Error {\r\n  }\r\n  class ErrorMessages {\r\n      constructor() {\r\n          this.base = 'TD:';\r\n          //#endregion\r\n          //#region used with notify.error\r\n          /**\r\n           * Used with an Error Event type if the user selects a date that\r\n           * fails restriction validation.\r\n           */\r\n          this.failedToSetInvalidDate = 'Failed to set invalid date';\r\n          /**\r\n           * Used with an Error Event type when a user changes the value of the\r\n           * input field directly, and does not provide a valid date.\r\n           */\r\n          this.failedToParseInput = 'Failed parse input field';\r\n          //#endregion\r\n      }\r\n      //#region out to console\r\n      /**\r\n       * Throws an error indicating that a key in the options object is invalid.\r\n       * @param optionName\r\n       */\r\n      unexpectedOption(optionName) {\r\n          const error = new TdError(`${this.base} Unexpected option: ${optionName} does not match a known option.`);\r\n          error.code = 1;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error indicating that one more keys in the options object is invalid.\r\n       * @param optionName\r\n       */\r\n      unexpectedOptions(optionName) {\r\n          const error = new TdError(`${this.base}: ${optionName.join(', ')}`);\r\n          error.code = 1;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error when an option is provide an unsupported value.\r\n       * For example a value of 'cheese' for toolbarPlacement which only supports\r\n       * 'top', 'bottom', 'default'.\r\n       * @param optionName\r\n       * @param badValue\r\n       * @param validOptions\r\n       */\r\n      unexpectedOptionValue(optionName, badValue, validOptions) {\r\n          const error = new TdError(`${this.base} Unexpected option value: ${optionName} does not accept a value of \"${badValue}\". Valid values are: ${validOptions.join(', ')}`);\r\n          error.code = 2;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error when an option value is the wrong type.\r\n       * For example a string value was provided to multipleDates which only\r\n       * supports true or false.\r\n       * @param optionName\r\n       * @param badType\r\n       * @param expectedType\r\n       */\r\n      typeMismatch(optionName, badType, expectedType) {\r\n          const error = new TdError(`${this.base} Mismatch types: ${optionName} has a type of ${badType} instead of the required ${expectedType}`);\r\n          error.code = 3;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error when an option value is  outside of the expected range.\r\n       * For example restrictions.daysOfWeekDisabled excepts a value between 0 and 6.\r\n       * @param optionName\r\n       * @param lower\r\n       * @param upper\r\n       */\r\n      numbersOutOfRange(optionName, lower, upper) {\r\n          const error = new TdError(`${this.base} ${optionName} expected an array of number between ${lower} and ${upper}.`);\r\n          error.code = 4;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws an error when a value for a date options couldn't be parsed. Either\r\n       * the option was an invalid string or an invalid Date object.\r\n       * @param optionName\r\n       * @param date\r\n       * @param soft If true, logs a warning instead of an error.\r\n       */\r\n      failedToParseDate(optionName, date, soft = false) {\r\n          const error = new TdError(`${this.base} Could not correctly parse \"${date}\" to a date for ${optionName}.`);\r\n          error.code = 5;\r\n          if (!soft)\r\n              throw error;\r\n          console.warn(error);\r\n      }\r\n      /**\r\n       * Throws when an element to attach to was not provided in the constructor.\r\n       */\r\n      mustProvideElement() {\r\n          const error = new TdError(`${this.base} No element was provided.`);\r\n          error.code = 6;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws if providing an array for the events to subscribe method doesn't have\r\n       * the same number of callbacks. E.g., subscribe([1,2], [1])\r\n       */\r\n      subscribeMismatch() {\r\n          const error = new TdError(`${this.base} The subscribed events does not match the number of callbacks`);\r\n          error.code = 7;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Throws if the configuration has conflicting rules e.g. minDate is after maxDate\r\n       */\r\n      conflictingConfiguration(message) {\r\n          const error = new TdError(`${this.base} A configuration value conflicts with another rule. ${message}`);\r\n          error.code = 8;\r\n          throw error;\r\n      }\r\n      /**\r\n       * customDateFormat errors\r\n       */\r\n      customDateFormatError(message) {\r\n          const error = new TdError(`${this.base} customDateFormat: ${message}`);\r\n          error.code = 9;\r\n          throw error;\r\n      }\r\n      /**\r\n       * Logs a warning if a date option value is provided as a string, instead of\r\n       * a date/datetime object.\r\n       */\r\n      dateString() {\r\n          console.warn(`${this.base} Using a string for date options is not recommended unless you specify an ISO string or use the customDateFormat plugin.`);\r\n      }\r\n      throwError(message) {\r\n          const error = new TdError(`${this.base} ${message}`);\r\n          error.code = 9;\r\n          throw error;\r\n      }\r\n  }\n\n  // this is not the way I want this to stay but nested classes seemed to blown up once its compiled.\r\n  const NAME = 'tempus-dominus', dataKey = 'td';\r\n  /**\r\n   * Events\r\n   */\r\n  class Events {\r\n      constructor() {\r\n          this.key = `.${dataKey}`;\r\n          /**\r\n           * Change event. Fired when the user selects a date.\r\n           * See also EventTypes.ChangeEvent\r\n           */\r\n          this.change = `change${this.key}`;\r\n          /**\r\n           * Emit when the view changes for example from month view to the year view.\r\n           * See also EventTypes.ViewUpdateEvent\r\n           */\r\n          this.update = `update${this.key}`;\r\n          /**\r\n           * Emits when a selected date or value from the input field fails to meet the provided validation rules.\r\n           * See also EventTypes.FailEvent\r\n           */\r\n          this.error = `error${this.key}`;\r\n          /**\r\n           * Show event\r\n           * @event Events#show\r\n           */\r\n          this.show = `show${this.key}`;\r\n          /**\r\n           * Hide event\r\n           * @event Events#hide\r\n           */\r\n          this.hide = `hide${this.key}`;\r\n          // blur and focus are used in the jQuery provider but are otherwise unused.\r\n          // keyup/down will be used later for keybinding options\r\n          this.blur = `blur${this.key}`;\r\n          this.focus = `focus${this.key}`;\r\n          this.keyup = `keyup${this.key}`;\r\n          this.keydown = `keydown${this.key}`;\r\n      }\r\n  }\r\n  class Css {\r\n      constructor() {\r\n          /**\r\n           * The outer element for the widget.\r\n           */\r\n          this.widget = `${NAME}-widget`;\r\n          /**\r\n           * Hold the previous, next and switcher divs\r\n           */\r\n          this.calendarHeader = 'calendar-header';\r\n          /**\r\n           * The element for the action to change the calendar view. E.g. month -> year.\r\n           */\r\n          this.switch = 'picker-switch';\r\n          /**\r\n           * The elements for all the toolbar options\r\n           */\r\n          this.toolbar = 'toolbar';\r\n          /**\r\n           * Disables the hover and rounding affect.\r\n           */\r\n          this.noHighlight = 'no-highlight';\r\n          /**\r\n           * Applied to the widget element when the side by side option is in use.\r\n           */\r\n          this.sideBySide = 'timepicker-sbs';\r\n          /**\r\n           * The element for the action to change the calendar view, e.g. August -> July\r\n           */\r\n          this.previous = 'previous';\r\n          /**\r\n           * The element for the action to change the calendar view, e.g. August -> September\r\n           */\r\n          this.next = 'next';\r\n          /**\r\n           * Applied to any action that would violate any restriction options. ALso applied\r\n           * to an input field if the disabled function is called.\r\n           */\r\n          this.disabled = 'disabled';\r\n          /**\r\n           * Applied to any date that is less than requested view,\r\n           * e.g. the last day of the previous month.\r\n           */\r\n          this.old = 'old';\r\n          /**\r\n           * Applied to any date that is greater than of requested view,\r\n           * e.g. the last day of the previous month.\r\n           */\r\n          this.new = 'new';\r\n          /**\r\n           * Applied to any date that is currently selected.\r\n           */\r\n          this.active = 'active';\r\n          //#region date element\r\n          /**\r\n           * The outer element for the calendar view.\r\n           */\r\n          this.dateContainer = 'date-container';\r\n          /**\r\n           * The outer element for the decades view.\r\n           */\r\n          this.decadesContainer = `${this.dateContainer}-decades`;\r\n          /**\r\n           * Applied to elements within the decades container, e.g. 2020, 2030\r\n           */\r\n          this.decade = 'decade';\r\n          /**\r\n           * The outer element for the years view.\r\n           */\r\n          this.yearsContainer = `${this.dateContainer}-years`;\r\n          /**\r\n           * Applied to elements within the years container, e.g. 2021, 2021\r\n           */\r\n          this.year = 'year';\r\n          /**\r\n           * The outer element for the month view.\r\n           */\r\n          this.monthsContainer = `${this.dateContainer}-months`;\r\n          /**\r\n           * Applied to elements within the month container, e.g. January, February\r\n           */\r\n          this.month = 'month';\r\n          /**\r\n           * The outer element for the calendar view.\r\n           */\r\n          this.daysContainer = `${this.dateContainer}-days`;\r\n          /**\r\n           * Applied to elements within the day container, e.g. 1, 2..31\r\n           */\r\n          this.day = 'day';\r\n          /**\r\n           * If display.calendarWeeks is enabled, a column displaying the week of year\r\n           * is shown. This class is applied to each cell in that column.\r\n           */\r\n          this.calendarWeeks = 'cw';\r\n          /**\r\n           * Applied to the first row of the calendar view, e.g. Sunday, Monday\r\n           */\r\n          this.dayOfTheWeek = 'dow';\r\n          /**\r\n           * Applied to the current date on the calendar view.\r\n           */\r\n          this.today = 'today';\r\n          /**\r\n           * Applied to the locale's weekend dates on the calendar view, e.g. Sunday, Saturday\r\n           */\r\n          this.weekend = 'weekend';\r\n          //#endregion\r\n          //#region time element\r\n          /**\r\n           * The outer element for all time related elements.\r\n           */\r\n          this.timeContainer = 'time-container';\r\n          /**\r\n           * Applied the separator columns between time elements, e.g. hour *:* minute *:* second\r\n           */\r\n          this.separator = 'separator';\r\n          /**\r\n           * The outer element for the clock view.\r\n           */\r\n          this.clockContainer = `${this.timeContainer}-clock`;\r\n          /**\r\n           * The outer element for the hours selection view.\r\n           */\r\n          this.hourContainer = `${this.timeContainer}-hour`;\r\n          /**\r\n           * The outer element for the minutes selection view.\r\n           */\r\n          this.minuteContainer = `${this.timeContainer}-minute`;\r\n          /**\r\n           * The outer element for the seconds selection view.\r\n           */\r\n          this.secondContainer = `${this.timeContainer}-second`;\r\n          /**\r\n           * Applied to each element in the hours selection view.\r\n           */\r\n          this.hour = 'hour';\r\n          /**\r\n           * Applied to each element in the minutes selection view.\r\n           */\r\n          this.minute = 'minute';\r\n          /**\r\n           * Applied to each element in the seconds selection view.\r\n           */\r\n          this.second = 'second';\r\n          /**\r\n           * Applied AM/PM toggle button.\r\n           */\r\n          this.toggleMeridiem = 'toggleMeridiem';\r\n          //#endregion\r\n          //#region collapse\r\n          /**\r\n           * Applied the element of the current view mode, e.g. calendar or clock.\r\n           */\r\n          this.show = 'show';\r\n          /**\r\n           * Applied to the currently showing view mode during a transition\r\n           * between calendar and clock views\r\n           */\r\n          this.collapsing = 'td-collapsing';\r\n          /**\r\n           * Applied to the currently hidden view mode.\r\n           */\r\n          this.collapse = 'td-collapse';\r\n          //#endregion\r\n          /**\r\n           * Applied to the widget when the option display.inline is enabled.\r\n           */\r\n          this.inline = 'inline';\r\n          /**\r\n           * Applied to the widget when the option display.theme is light.\r\n           */\r\n          this.lightTheme = 'light';\r\n          /**\r\n          * Applied to the widget when the option display.theme is dark.\r\n          */\r\n          this.darkTheme = 'dark';\r\n          /**\r\n          * Used for detecting if the system color preference is dark mode\r\n          */\r\n          this.isDarkPreferredQuery = '(prefers-color-scheme: dark)';\r\n      }\r\n  }\r\n  class Namespace {\r\n  }\r\n  Namespace.NAME = NAME;\r\n  // noinspection JSUnusedGlobalSymbols\r\n  Namespace.dataKey = dataKey;\r\n  Namespace.events = new Events();\r\n  Namespace.css = new Css();\r\n  Namespace.errorMessages = new ErrorMessages();\n\n  class ServiceLocator {\r\n      constructor() {\r\n          this.cache = new Map();\r\n      }\r\n      locate(identifier) {\r\n          const service = this.cache.get(identifier);\r\n          if (service)\r\n              return service;\r\n          const value = new identifier();\r\n          this.cache.set(identifier, value);\r\n          return value;\r\n      }\r\n  }\r\n  const setupServiceLocator = () => {\r\n      serviceLocator = new ServiceLocator();\r\n  };\r\n  let serviceLocator;\n\n  const CalendarModes = [\r\n      {\r\n          name: 'calendar',\r\n          className: Namespace.css.daysContainer,\r\n          unit: Unit.month,\r\n          step: 1,\r\n      },\r\n      {\r\n          name: 'months',\r\n          className: Namespace.css.monthsContainer,\r\n          unit: Unit.year,\r\n          step: 1,\r\n      },\r\n      {\r\n          name: 'years',\r\n          className: Namespace.css.yearsContainer,\r\n          unit: Unit.year,\r\n          step: 10,\r\n      },\r\n      {\r\n          name: 'decades',\r\n          className: Namespace.css.decadesContainer,\r\n          unit: Unit.year,\r\n          step: 100,\r\n      },\r\n  ];\n\n  class OptionsStore {\r\n      constructor() {\r\n          this._currentCalendarViewMode = 0;\r\n          this._viewDate = new DateTime();\r\n          this.minimumCalendarViewMode = 0;\r\n          this.currentView = 'calendar';\r\n      }\r\n      get currentCalendarViewMode() {\r\n          return this._currentCalendarViewMode;\r\n      }\r\n      set currentCalendarViewMode(value) {\r\n          this._currentCalendarViewMode = value;\r\n          this.currentView = CalendarModes[value].name;\r\n      }\r\n      get viewDate() {\r\n          return this._viewDate;\r\n      }\r\n      set viewDate(v) {\r\n          this._viewDate = v;\r\n          if (this.options)\r\n              this.options.viewDate = v;\r\n      }\r\n      /**\r\n       * When switching back to the calendar from the clock,\r\n       * this sets currentView to the correct calendar view.\r\n       */\r\n      refreshCurrentView() {\r\n          this.currentView = CalendarModes[this.currentCalendarViewMode].name;\r\n      }\r\n  }\n\n  /**\r\n   * Main class for date validation rules based on the options provided.\r\n   */\r\n  class Validation {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n      }\r\n      /**\r\n       * Checks to see if the target date is valid based on the rules provided in the options.\r\n       * Granularity can be provided to check portions of the date instead of the whole.\r\n       * @param targetDate\r\n       * @param granularity\r\n       */\r\n      isValid(targetDate, granularity) {\r\n          if (granularity !== Unit.month &&\r\n              this.optionsStore.options.restrictions.disabledDates.length > 0 &&\r\n              this._isInDisabledDates(targetDate)) {\r\n              return false;\r\n          }\r\n          if (granularity !== Unit.month &&\r\n              this.optionsStore.options.restrictions.enabledDates.length > 0 &&\r\n              !this._isInEnabledDates(targetDate)) {\r\n              return false;\r\n          }\r\n          if (granularity !== Unit.month &&\r\n              granularity !== Unit.year &&\r\n              this.optionsStore.options.restrictions.daysOfWeekDisabled?.length > 0 &&\r\n              this.optionsStore.options.restrictions.daysOfWeekDisabled.indexOf(targetDate.weekDay) !== -1) {\r\n              return false;\r\n          }\r\n          if (this.optionsStore.options.restrictions.minDate &&\r\n              targetDate.isBefore(this.optionsStore.options.restrictions.minDate, granularity)) {\r\n              return false;\r\n          }\r\n          if (this.optionsStore.options.restrictions.maxDate &&\r\n              targetDate.isAfter(this.optionsStore.options.restrictions.maxDate, granularity)) {\r\n              return false;\r\n          }\r\n          if (granularity === Unit.hours ||\r\n              granularity === Unit.minutes ||\r\n              granularity === Unit.seconds) {\r\n              if (this.optionsStore.options.restrictions.disabledHours.length > 0 &&\r\n                  this._isInDisabledHours(targetDate)) {\r\n                  return false;\r\n              }\r\n              if (this.optionsStore.options.restrictions.enabledHours.length > 0 &&\r\n                  !this._isInEnabledHours(targetDate)) {\r\n                  return false;\r\n              }\r\n              if (this.optionsStore.options.restrictions.disabledTimeIntervals.length > 0) {\r\n                  for (let disabledTimeIntervals of this.optionsStore.options.restrictions.disabledTimeIntervals) {\r\n                      if (targetDate.isBetween(disabledTimeIntervals.from, disabledTimeIntervals.to))\r\n                          return false;\r\n                  }\r\n              }\r\n          }\r\n          return true;\r\n      }\r\n      /**\r\n       * Checks to see if the disabledDates option is in use and returns true (meaning invalid)\r\n       * if the `testDate` is with in the array. Granularity is by date.\r\n       * @param testDate\r\n       * @private\r\n       */\r\n      _isInDisabledDates(testDate) {\r\n          if (!this.optionsStore.options.restrictions.disabledDates ||\r\n              this.optionsStore.options.restrictions.disabledDates.length === 0)\r\n              return false;\r\n          return this.optionsStore.options.restrictions.disabledDates\r\n              .find((x) => x.isSame(testDate, Unit.date));\r\n      }\r\n      /**\r\n       * Checks to see if the enabledDates option is in use and returns true (meaning valid)\r\n       * if the `testDate` is with in the array. Granularity is by date.\r\n       * @param testDate\r\n       * @private\r\n       */\r\n      _isInEnabledDates(testDate) {\r\n          if (!this.optionsStore.options.restrictions.enabledDates ||\r\n              this.optionsStore.options.restrictions.enabledDates.length === 0)\r\n              return true;\r\n          return this.optionsStore.options.restrictions.enabledDates\r\n              .find((x) => x.isSame(testDate, Unit.date));\r\n      }\r\n      /**\r\n       * Checks to see if the disabledHours option is in use and returns true (meaning invalid)\r\n       * if the `testDate` is with in the array. Granularity is by hours.\r\n       * @param testDate\r\n       * @private\r\n       */\r\n      _isInDisabledHours(testDate) {\r\n          if (!this.optionsStore.options.restrictions.disabledHours ||\r\n              this.optionsStore.options.restrictions.disabledHours.length === 0)\r\n              return false;\r\n          const formattedDate = testDate.hours;\r\n          return this.optionsStore.options.restrictions.disabledHours.find((x) => x === formattedDate);\r\n      }\r\n      /**\r\n       * Checks to see if the enabledHours option is in use and returns true (meaning valid)\r\n       * if the `testDate` is with in the array. Granularity is by hours.\r\n       * @param testDate\r\n       * @private\r\n       */\r\n      _isInEnabledHours(testDate) {\r\n          if (!this.optionsStore.options.restrictions.enabledHours ||\r\n              this.optionsStore.options.restrictions.enabledHours.length === 0)\r\n              return true;\r\n          const formattedDate = testDate.hours;\r\n          return this.optionsStore.options.restrictions.enabledHours.find((x) => x === formattedDate);\r\n      }\r\n  }\n\n  class EventEmitter {\r\n      constructor() {\r\n          this.subscribers = [];\r\n      }\r\n      subscribe(callback) {\r\n          this.subscribers.push(callback);\r\n          return this.unsubscribe.bind(this, this.subscribers.length - 1);\r\n      }\r\n      unsubscribe(index) {\r\n          this.subscribers.splice(index, 1);\r\n      }\r\n      emit(value) {\r\n          this.subscribers.forEach((callback) => {\r\n              callback(value);\r\n          });\r\n      }\r\n      destroy() {\r\n          this.subscribers = null;\r\n          this.subscribers = [];\r\n      }\r\n  }\r\n  class EventEmitters {\r\n      constructor() {\r\n          this.triggerEvent = new EventEmitter();\r\n          this.viewUpdate = new EventEmitter();\r\n          this.updateDisplay = new EventEmitter();\r\n          this.action = new EventEmitter();\r\n          this.updateViewDate = new EventEmitter();\r\n      }\r\n      destroy() {\r\n          this.triggerEvent.destroy();\r\n          this.viewUpdate.destroy();\r\n          this.updateDisplay.destroy();\r\n          this.action.destroy();\r\n          this.updateViewDate.destroy();\r\n      }\r\n  }\n\n  const DefaultOptions = {\r\n      restrictions: {\r\n          minDate: undefined,\r\n          maxDate: undefined,\r\n          disabledDates: [],\r\n          enabledDates: [],\r\n          daysOfWeekDisabled: [],\r\n          disabledTimeIntervals: [],\r\n          disabledHours: [],\r\n          enabledHours: []\r\n      },\r\n      display: {\r\n          icons: {\r\n              type: 'icons',\r\n              time: 'fa-solid fa-clock',\r\n              date: 'fa-solid fa-calendar',\r\n              up: 'fa-solid fa-arrow-up',\r\n              down: 'fa-solid fa-arrow-down',\r\n              previous: 'fa-solid fa-chevron-left',\r\n              next: 'fa-solid fa-chevron-right',\r\n              today: 'fa-solid fa-calendar-check',\r\n              clear: 'fa-solid fa-trash',\r\n              close: 'fa-solid fa-xmark'\r\n          },\r\n          sideBySide: false,\r\n          calendarWeeks: false,\r\n          viewMode: 'calendar',\r\n          toolbarPlacement: 'bottom',\r\n          keepOpen: false,\r\n          buttons: {\r\n              today: false,\r\n              clear: false,\r\n              close: false\r\n          },\r\n          components: {\r\n              calendar: true,\r\n              date: true,\r\n              month: true,\r\n              year: true,\r\n              decades: true,\r\n              clock: true,\r\n              hours: true,\r\n              minutes: true,\r\n              seconds: false,\r\n              useTwentyfourHour: undefined\r\n          },\r\n          inline: false,\r\n          theme: 'auto'\r\n      },\r\n      stepping: 1,\r\n      useCurrent: true,\r\n      defaultDate: undefined,\r\n      localization: {\r\n          today: 'Go to today',\r\n          clear: 'Clear selection',\r\n          close: 'Close the picker',\r\n          selectMonth: 'Select Month',\r\n          previousMonth: 'Previous Month',\r\n          nextMonth: 'Next Month',\r\n          selectYear: 'Select Year',\r\n          previousYear: 'Previous Year',\r\n          nextYear: 'Next Year',\r\n          selectDecade: 'Select Decade',\r\n          previousDecade: 'Previous Decade',\r\n          nextDecade: 'Next Decade',\r\n          previousCentury: 'Previous Century',\r\n          nextCentury: 'Next Century',\r\n          pickHour: 'Pick Hour',\r\n          incrementHour: 'Increment Hour',\r\n          decrementHour: 'Decrement Hour',\r\n          pickMinute: 'Pick Minute',\r\n          incrementMinute: 'Increment Minute',\r\n          decrementMinute: 'Decrement Minute',\r\n          pickSecond: 'Pick Second',\r\n          incrementSecond: 'Increment Second',\r\n          decrementSecond: 'Decrement Second',\r\n          toggleMeridiem: 'Toggle Meridiem',\r\n          selectTime: 'Select Time',\r\n          selectDate: 'Select Date',\r\n          dayViewHeaderFormat: { month: 'long', year: '2-digit' },\r\n          locale: 'default',\r\n          startOfTheWeek: 0,\r\n          /**\r\n           * This is only used with the customDateFormat plugin\r\n           */\r\n          dateFormats: {\r\n              LTS: 'h:mm:ss T',\r\n              LT: 'h:mm T',\r\n              L: 'MM/dd/yyyy',\r\n              LL: 'MMMM d, yyyy',\r\n              LLL: 'MMMM d, yyyy h:mm T',\r\n              LLLL: 'dddd, MMMM d, yyyy h:mm T',\r\n          },\r\n          /**\r\n           * This is only used with the customDateFormat plugin\r\n           */\r\n          ordinal: (n) => n,\r\n          /**\r\n           * This is only used with the customDateFormat plugin\r\n           */\r\n          format: 'L LT'\r\n      },\r\n      keepInvalid: false,\r\n      debug: false,\r\n      allowInputToggle: false,\r\n      viewDate: new DateTime(),\r\n      multipleDates: false,\r\n      multipleDatesSeparator: '; ',\r\n      promptTimeOnDateChange: false,\r\n      promptTimeOnDateChangeTransitionDelay: 200,\r\n      meta: {},\r\n      container: undefined\r\n  };\n\n  /**\r\n   * Attempts to prove `d` is a DateTime or Date or can be converted into one.\r\n   * @param d If a string will attempt creating a date from it.\r\n   * @param localization object containing locale and format settings. Only used with the custom formats\r\n   * @private\r\n   */\r\n  function tryConvertToDateTime(d, localization) {\r\n      if (d.constructor.name === DateTime.name)\r\n          return d;\r\n      if (d.constructor.name === Date.name) {\r\n          return DateTime.convert(d);\r\n      }\r\n      if (typeof d === typeof '') {\r\n          const dateTime = DateTime.fromString(d, localization);\r\n          if (JSON.stringify(dateTime) === 'null') {\r\n              return null;\r\n          }\r\n          return dateTime;\r\n      }\r\n      return null;\r\n  }\r\n  /**\r\n   * Attempts to convert `d` to a DateTime object\r\n   * @param d value to convert\r\n   * @param optionName Provides text to error messages e.g. disabledDates\r\n   * @param localization object containing locale and format settings. Only used with the custom formats\r\n   */\r\n  function convertToDateTime(d, optionName, localization) {\r\n      if (typeof d === typeof '' && optionName !== 'input') {\r\n          Namespace.errorMessages.dateString();\r\n      }\r\n      const converted = tryConvertToDateTime(d, localization);\r\n      if (!converted) {\r\n          Namespace.errorMessages.failedToParseDate(optionName, d, optionName === 'input');\r\n      }\r\n      return converted;\r\n  }\r\n  /**\r\n   * Type checks that `value` is an array of Date or DateTime\r\n   * @param optionName Provides text to error messages e.g. disabledDates\r\n   * @param value Option value\r\n   * @param providedType Used to provide text to error messages\r\n   * @param localization\r\n   */\r\n  function typeCheckDateArray(optionName, value, providedType, localization) {\r\n      if (!Array.isArray(value)) {\r\n          Namespace.errorMessages.typeMismatch(optionName, providedType, 'array of DateTime or Date');\r\n      }\r\n      for (let i = 0; i < value.length; i++) {\r\n          let d = value[i];\r\n          const dateTime = convertToDateTime(d, optionName, localization);\r\n          if (!dateTime) {\r\n              Namespace.errorMessages.typeMismatch(optionName, typeof d, 'DateTime or Date');\r\n          }\r\n          dateTime.setLocale(localization?.locale ?? 'default');\r\n          value[i] = dateTime;\r\n      }\r\n  }\r\n  /**\r\n   * Type checks that `value` is an array of numbers\r\n   * @param optionName Provides text to error messages e.g. disabledDates\r\n   * @param value Option value\r\n   * @param providedType Used to provide text to error messages\r\n   */\r\n  function typeCheckNumberArray(optionName, value, providedType) {\r\n      if (!Array.isArray(value) || value.some((x) => typeof x !== typeof 0)) {\r\n          Namespace.errorMessages.typeMismatch(optionName, providedType, 'array of numbers');\r\n      }\r\n  }\n\n  function mandatoryDate(key) {\r\n      return ({ value, providedType, localization }) => {\r\n          const dateTime = convertToDateTime(value, key, localization);\r\n          if (dateTime !== undefined) {\r\n              dateTime.setLocale(localization.locale);\r\n              return dateTime;\r\n          }\r\n          Namespace.errorMessages.typeMismatch(key, providedType, 'DateTime or Date');\r\n      };\r\n  }\r\n  function optionalDate(key) {\r\n      const mandatory = mandatoryDate(key);\r\n      return (args) => {\r\n          if (args.value === undefined) {\r\n              return args.value;\r\n          }\r\n          return mandatory(args);\r\n      };\r\n  }\r\n  function numbersInRange(key, lower, upper) {\r\n      return ({ value, providedType }) => {\r\n          if (value === undefined) {\r\n              return [];\r\n          }\r\n          typeCheckNumberArray(key, value, providedType);\r\n          if (value.some(x => x < lower || x > upper))\r\n              Namespace.errorMessages.numbersOutOfRange(key, lower, upper);\r\n          return value;\r\n      };\r\n  }\r\n  function validHourRange(key) {\r\n      return numbersInRange(key, 0, 23);\r\n  }\r\n  function validDateArray(key) {\r\n      return ({ value, providedType, localization }) => {\r\n          if (value === undefined) {\r\n              return [];\r\n          }\r\n          typeCheckDateArray(key, value, providedType, localization);\r\n          return value;\r\n      };\r\n  }\r\n  function validKeyOption(keyOptions) {\r\n      return ({ value, path }) => {\r\n          if (!keyOptions.includes(value))\r\n              Namespace.errorMessages.unexpectedOptionValue(path.substring(1), value, keyOptions);\r\n          return value;\r\n      };\r\n  }\r\n  const optionProcessors = Object.freeze({\r\n      'defaultDate': mandatoryDate('defaultDate'),\r\n      'viewDate': mandatoryDate('viewDate'),\r\n      'minDate': optionalDate('restrictions.minDate'),\r\n      'maxDate': optionalDate('restrictions.maxDate'),\r\n      'disabledHours': validHourRange('restrictions.disabledHours'),\r\n      'enabledHours': validHourRange('restrictions.enabledHours'),\r\n      'disabledDates': validDateArray('restrictions.disabledDates'),\r\n      'enabledDates': validDateArray('restrictions.enabledDates'),\r\n      'daysOfWeekDisabled': numbersInRange('restrictions.daysOfWeekDisabled', 0, 6),\r\n      'disabledTimeIntervals': ({ key, value, providedType, localization }) => {\r\n          if (value === undefined) {\r\n              return [];\r\n          }\r\n          if (!Array.isArray(value)) {\r\n              Namespace.errorMessages.typeMismatch(key, providedType, 'array of { from: DateTime|Date, to: DateTime|Date }');\r\n          }\r\n          const valueObject = value;\r\n          for (let i = 0; i < valueObject.length; i++) {\r\n              Object.keys(valueObject[i]).forEach((vk) => {\r\n                  const subOptionName = `${key}[${i}].${vk}`;\r\n                  const d = valueObject[i][vk];\r\n                  const dateTime = convertToDateTime(d, subOptionName, localization);\r\n                  if (!dateTime) {\r\n                      Namespace.errorMessages.typeMismatch(subOptionName, typeof d, 'DateTime or Date');\r\n                  }\r\n                  dateTime.setLocale(localization.locale);\r\n                  valueObject[i][vk] = dateTime;\r\n              });\r\n          }\r\n          return valueObject;\r\n      },\r\n      'toolbarPlacement': validKeyOption(['top', 'bottom', 'default']),\r\n      'type': validKeyOption(['icons', 'sprites']),\r\n      'viewMode': validKeyOption(['clock', 'calendar', 'months', 'years', 'decades']),\r\n      'theme': validKeyOption(['light', 'dark', 'auto']),\r\n      'meta': ({ value }) => value,\r\n      'dayViewHeaderFormat': ({ value }) => value,\r\n      'container': ({ value, path }) => {\r\n          if (value &&\r\n              !(value instanceof HTMLElement ||\r\n                  value instanceof Element ||\r\n                  value?.appendChild)) {\r\n              Namespace.errorMessages.typeMismatch(path.substring(1), typeof value, 'HTMLElement');\r\n          }\r\n          return value;\r\n      },\r\n      'useTwentyfourHour': ({ value, path, providedType, defaultType }) => {\r\n          if (value === undefined || providedType === 'boolean')\r\n              return value;\r\n          Namespace.errorMessages.typeMismatch(path, providedType, defaultType);\r\n      }\r\n  });\r\n  const defaultProcessor = ({ value, defaultType, providedType, path }) => {\r\n      switch (defaultType) {\r\n          case 'boolean':\r\n              return value === 'true' || value === true;\r\n          case 'number':\r\n              return +value;\r\n          case 'string':\r\n              return value.toString();\r\n          case 'object':\r\n              return {};\r\n          case 'function':\r\n              return value;\r\n          default:\r\n              Namespace.errorMessages.typeMismatch(path, providedType, defaultType);\r\n      }\r\n  };\r\n  function processKey(args) {\r\n      return (optionProcessors[args.key] || defaultProcessor)(args);\r\n  }\n\n  class OptionConverter {\r\n      static deepCopy(input) {\r\n          const o = {};\r\n          Object.keys(input).forEach((key) => {\r\n              const inputElement = input[key];\r\n              if (inputElement instanceof DateTime) {\r\n                  o[key] = inputElement.clone;\r\n                  return;\r\n              }\r\n              else if (inputElement instanceof Date) {\r\n                  o[key] = new Date(inputElement.valueOf());\r\n                  return;\r\n              }\r\n              o[key] = inputElement;\r\n              if (typeof inputElement !== 'object' ||\r\n                  inputElement instanceof HTMLElement ||\r\n                  inputElement instanceof Element)\r\n                  return;\r\n              if (!Array.isArray(inputElement)) {\r\n                  o[key] = OptionConverter.deepCopy(inputElement);\r\n              }\r\n          });\r\n          return o;\r\n      }\r\n      /**\r\n       * Finds value out of an object based on a string, period delimited, path\r\n       * @param paths\r\n       * @param obj\r\n       */\r\n      static objectPath(paths, obj) {\r\n          if (paths.charAt(0) === '.')\r\n              paths = paths.slice(1);\r\n          if (!paths)\r\n              return obj;\r\n          return paths.split('.')\r\n              .reduce((value, key) => (OptionConverter.isValue(value) || OptionConverter.isValue(value[key]) ?\r\n              value[key] :\r\n              undefined), obj);\r\n      }\r\n      /**\r\n       * The spread operator caused sub keys to be missing after merging.\r\n       * This is to fix that issue by using spread on the child objects first.\r\n       * Also handles complex options like disabledDates\r\n       * @param provided An option from new providedOptions\r\n       * @param copyTo Destination object. This was added to prevent reference copies\r\n       * @param path\r\n       * @param localization\r\n       */\r\n      static spread(provided, copyTo, path = '', localization) {\r\n          const defaultOptions = OptionConverter.objectPath(path, DefaultOptions);\r\n          const unsupportedOptions = Object.keys(provided).filter((x) => !Object.keys(defaultOptions).includes(x));\r\n          if (unsupportedOptions.length > 0) {\r\n              const flattenedOptions = OptionConverter.getFlattenDefaultOptions();\r\n              const errors = unsupportedOptions.map((x) => {\r\n                  let error = `\"${path}.${x}\" in not a known option.`;\r\n                  let didYouMean = flattenedOptions.find((y) => y.includes(x));\r\n                  if (didYouMean)\r\n                      error += ` Did you mean \"${didYouMean}\"?`;\r\n                  return error;\r\n              });\r\n              Namespace.errorMessages.unexpectedOptions(errors);\r\n          }\r\n          Object.keys(provided).filter(key => key !== '__proto__' && key !== 'constructor').forEach((key) => {\r\n              path += `.${key}`;\r\n              if (path.charAt(0) === '.')\r\n                  path = path.slice(1);\r\n              const defaultOptionValue = defaultOptions[key];\r\n              let providedType = typeof provided[key];\r\n              let defaultType = typeof defaultOptionValue;\r\n              let value = provided[key];\r\n              if (value === undefined || value === null) {\r\n                  copyTo[key] = value;\r\n                  path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                  return;\r\n              }\r\n              if (typeof defaultOptionValue === 'object' &&\r\n                  !Array.isArray(provided[key]) &&\r\n                  !(defaultOptionValue instanceof Date || OptionConverter.ignoreProperties.includes(key))) {\r\n                  OptionConverter.spread(provided[key], copyTo[key], path, localization);\r\n              }\r\n              else {\r\n                  copyTo[key] = OptionConverter.processKey(key, value, providedType, defaultType, path, localization);\r\n              }\r\n              path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n          });\r\n      }\r\n      static processKey(key, value, providedType, defaultType, path, localization) {\r\n          return processKey({ key, value, providedType, defaultType, path, localization });\r\n      }\r\n      static _mergeOptions(providedOptions, mergeTo) {\r\n          const newConfig = OptionConverter.deepCopy(mergeTo);\r\n          //see if the options specify a locale\r\n          const localization = mergeTo.localization?.locale !== 'default'\r\n              ? mergeTo.localization\r\n              : providedOptions?.localization || DefaultOptions.localization;\r\n          OptionConverter.spread(providedOptions, newConfig, '', localization);\r\n          return newConfig;\r\n      }\r\n      static _dataToOptions(element, options) {\r\n          const eData = JSON.parse(JSON.stringify(element.dataset));\r\n          if (eData?.tdTargetInput)\r\n              delete eData.tdTargetInput;\r\n          if (eData?.tdTargetToggle)\r\n              delete eData.tdTargetToggle;\r\n          if (!eData ||\r\n              Object.keys(eData).length === 0 ||\r\n              eData.constructor !== DOMStringMap)\r\n              return options;\r\n          let dataOptions = {};\r\n          // because dataset returns camelCase including the 'td' key the option\r\n          // key won't align\r\n          const objectToNormalized = (object) => {\r\n              const lowered = {};\r\n              Object.keys(object).forEach((x) => {\r\n                  lowered[x.toLowerCase()] = x;\r\n              });\r\n              return lowered;\r\n          };\r\n          const rabbitHole = (split, index, optionSubgroup, value) => {\r\n              // first round = display { ... }\r\n              const normalizedOptions = objectToNormalized(optionSubgroup);\r\n              const keyOption = normalizedOptions[split[index].toLowerCase()];\r\n              const internalObject = {};\r\n              if (keyOption === undefined)\r\n                  return internalObject;\r\n              // if this is another object, continue down the rabbit hole\r\n              if (optionSubgroup[keyOption].constructor === Object) {\r\n                  index++;\r\n                  internalObject[keyOption] = rabbitHole(split, index, optionSubgroup[keyOption], value);\r\n              }\r\n              else {\r\n                  internalObject[keyOption] = value;\r\n              }\r\n              return internalObject;\r\n          };\r\n          const optionsLower = objectToNormalized(options);\r\n          Object.keys(eData)\r\n              .filter((x) => x.startsWith(Namespace.dataKey))\r\n              .map((x) => x.substring(2))\r\n              .forEach((key) => {\r\n              let keyOption = optionsLower[key.toLowerCase()];\r\n              // dataset merges dashes to camelCase... yay\r\n              // i.e. key = display_components_seconds\r\n              if (key.includes('_')) {\r\n                  // [display, components, seconds]\r\n                  const split = key.split('_');\r\n                  // display\r\n                  keyOption = optionsLower[split[0].toLowerCase()];\r\n                  if (keyOption !== undefined &&\r\n                      options[keyOption].constructor === Object) {\r\n                      dataOptions[keyOption] = rabbitHole(split, 1, options[keyOption], eData[`td${key}`]);\r\n                  }\r\n              }\r\n              // or key = multipleDate\r\n              else if (keyOption !== undefined) {\r\n                  dataOptions[keyOption] = eData[`td${key}`];\r\n              }\r\n          });\r\n          return this._mergeOptions(dataOptions, options);\r\n      }\r\n      /**\r\n       * Attempts to prove `d` is a DateTime or Date or can be converted into one.\r\n       * @param d If a string will attempt creating a date from it.\r\n       * @param localization object containing locale and format settings. Only used with the custom formats\r\n       * @private\r\n       */\r\n      static _dateTypeCheck(d, localization) {\r\n          return tryConvertToDateTime(d, localization);\r\n      }\r\n      /**\r\n       * Type checks that `value` is an array of Date or DateTime\r\n       * @param optionName Provides text to error messages e.g. disabledDates\r\n       * @param value Option value\r\n       * @param providedType Used to provide text to error messages\r\n       * @param localization\r\n       */\r\n      static _typeCheckDateArray(optionName, value, providedType, localization) {\r\n          return typeCheckDateArray(optionName, value, providedType, localization);\r\n      }\r\n      /**\r\n       * Type checks that `value` is an array of numbers\r\n       * @param optionName Provides text to error messages e.g. disabledDates\r\n       * @param value Option value\r\n       * @param providedType Used to provide text to error messages\r\n       */\r\n      static _typeCheckNumberArray(optionName, value, providedType) {\r\n          return typeCheckNumberArray(optionName, value, providedType);\r\n      }\r\n      /**\r\n       * Attempts to convert `d` to a DateTime object\r\n       * @param d value to convert\r\n       * @param optionName Provides text to error messages e.g. disabledDates\r\n       * @param localization object containing locale and format settings. Only used with the custom formats\r\n       */\r\n      static dateConversion(d, optionName, localization) {\r\n          return convertToDateTime(d, optionName, localization);\r\n      }\r\n      static getFlattenDefaultOptions() {\r\n          if (this._flattenDefaults)\r\n              return this._flattenDefaults;\r\n          const deepKeys = (t, pre = []) => {\r\n              if (Array.isArray(t))\r\n                  return [];\r\n              if (Object(t) === t) {\r\n                  return Object.entries(t).flatMap(([k, v]) => deepKeys(v, [...pre, k]));\r\n              }\r\n              else {\r\n                  return pre.join('.');\r\n              }\r\n          };\r\n          this._flattenDefaults = deepKeys(DefaultOptions);\r\n          return this._flattenDefaults;\r\n      }\r\n      /**\r\n       * Some options conflict like min/max date. Verify that these kinds of options\r\n       * are set correctly.\r\n       * @param config\r\n       */\r\n      static _validateConflicts(config) {\r\n          if (config.display.sideBySide &&\r\n              (!config.display.components.clock ||\r\n                  !(config.display.components.hours ||\r\n                      config.display.components.minutes ||\r\n                      config.display.components.seconds))) {\r\n              Namespace.errorMessages.conflictingConfiguration('Cannot use side by side mode without the clock components');\r\n          }\r\n          if (config.restrictions.minDate && config.restrictions.maxDate) {\r\n              if (config.restrictions.minDate.isAfter(config.restrictions.maxDate)) {\r\n                  Namespace.errorMessages.conflictingConfiguration('minDate is after maxDate');\r\n              }\r\n              if (config.restrictions.maxDate.isBefore(config.restrictions.minDate)) {\r\n                  Namespace.errorMessages.conflictingConfiguration('maxDate is before minDate');\r\n              }\r\n          }\r\n      }\r\n  }\r\n  OptionConverter.ignoreProperties = ['meta', 'dayViewHeaderFormat',\r\n      'container', 'dateForms', 'ordinal'];\r\n  OptionConverter.isValue = a => a != null; // everything except undefined + null\n\n  class Dates {\r\n      constructor() {\r\n          this._dates = [];\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n          this._eventEmitters = serviceLocator.locate(EventEmitters);\r\n      }\r\n      /**\r\n       * Returns the array of selected dates\r\n       */\r\n      get picked() {\r\n          return this._dates;\r\n      }\r\n      /**\r\n       * Returns the last picked value.\r\n       */\r\n      get lastPicked() {\r\n          return this._dates[this.lastPickedIndex];\r\n      }\r\n      /**\r\n       * Returns the length of picked dates -1 or 0 if none are selected.\r\n       */\r\n      get lastPickedIndex() {\r\n          if (this._dates.length === 0)\r\n              return 0;\r\n          return this._dates.length - 1;\r\n      }\r\n      /**\r\n       * Formats a DateTime object to a string. Used when setting the input value.\r\n       * @param date\r\n       */\r\n      formatInput(date) {\r\n          const components = this.optionsStore.options.display.components;\r\n          if (!date)\r\n              return '';\r\n          return date.format({\r\n              year: components.calendar && components.year ? 'numeric' : undefined,\r\n              month: components.calendar && components.month ? '2-digit' : undefined,\r\n              day: components.calendar && components.date ? '2-digit' : undefined,\r\n              hour: components.clock && components.hours\r\n                  ? components.useTwentyfourHour\r\n                      ? '2-digit'\r\n                      : 'numeric'\r\n                  : undefined,\r\n              minute: components.clock && components.minutes ? '2-digit' : undefined,\r\n              second: components.clock && components.seconds ? '2-digit' : undefined,\r\n              hour12: !components.useTwentyfourHour,\r\n          });\r\n      }\r\n      /**\r\n       * parse the value into a DateTime object.\r\n       * this can be overwritten to supply your own parsing.\r\n       */\r\n      parseInput(value) {\r\n          return OptionConverter.dateConversion(value, 'input', this.optionsStore.options.localization);\r\n      }\r\n      /**\r\n       * Tries to convert the provided value to a DateTime object.\r\n       * If value is null|undefined then clear the value of the provided index (or 0).\r\n       * @param value Value to convert or null|undefined\r\n       * @param index When using multidates this is the index in the array\r\n       */\r\n      setFromInput(value, index) {\r\n          if (!value) {\r\n              this.setValue(undefined, index);\r\n              return;\r\n          }\r\n          const converted = this.parseInput(value);\r\n          if (converted) {\r\n              converted.setLocale(this.optionsStore.options.localization.locale);\r\n              this.setValue(converted, index);\r\n          }\r\n      }\r\n      /**\r\n       * Adds a new DateTime to selected dates array\r\n       * @param date\r\n       */\r\n      add(date) {\r\n          this._dates.push(date);\r\n      }\r\n      /**\r\n       * Returns true if the `targetDate` is part of the selected dates array.\r\n       * If `unit` is provided then a granularity to that unit will be used.\r\n       * @param targetDate\r\n       * @param unit\r\n       */\r\n      isPicked(targetDate, unit) {\r\n          if (!unit)\r\n              return this._dates.find((x) => x === targetDate) !== undefined;\r\n          const format = getFormatByUnit(unit);\r\n          let innerDateFormatted = targetDate.format(format);\r\n          return (this._dates\r\n              .map((x) => x.format(format))\r\n              .find((x) => x === innerDateFormatted) !== undefined);\r\n      }\r\n      /**\r\n       * Returns the index at which `targetDate` is in the array.\r\n       * This is used for updating or removing a date when multi-date is used\r\n       * If `unit` is provided then a granularity to that unit will be used.\r\n       * @param targetDate\r\n       * @param unit\r\n       */\r\n      pickedIndex(targetDate, unit) {\r\n          if (!unit)\r\n              return this._dates.indexOf(targetDate);\r\n          const format = getFormatByUnit(unit);\r\n          let innerDateFormatted = targetDate.format(format);\r\n          return this._dates.map((x) => x.format(format)).indexOf(innerDateFormatted);\r\n      }\r\n      /**\r\n       * Clears all selected dates.\r\n       */\r\n      clear() {\r\n          this.optionsStore.unset = true;\r\n          this._eventEmitters.triggerEvent.emit({\r\n              type: Namespace.events.change,\r\n              date: undefined,\r\n              oldDate: this.lastPicked,\r\n              isClear: true,\r\n              isValid: true,\r\n          });\r\n          this._dates = [];\r\n      }\r\n      /**\r\n       * Find the \"book end\" years given a `year` and a `factor`\r\n       * @param factor e.g. 100 for decades\r\n       * @param year e.g. 2021\r\n       */\r\n      static getStartEndYear(factor, year) {\r\n          const step = factor / 10, startYear = Math.floor(year / factor) * factor, endYear = startYear + step * 9, focusValue = Math.floor(year / step) * step;\r\n          return [startYear, endYear, focusValue];\r\n      }\r\n      updateInput(target) {\r\n          if (!this.optionsStore.input)\r\n              return;\r\n          let newValue = this.formatInput(target);\r\n          if (this.optionsStore.options.multipleDates) {\r\n              newValue = this._dates\r\n                  .map((d) => this.formatInput(d))\r\n                  .join(this.optionsStore.options.multipleDatesSeparator);\r\n          }\r\n          if (this.optionsStore.input.value != newValue)\r\n              this.optionsStore.input.value = newValue;\r\n      }\r\n      /**\r\n       * Attempts to either clear or set the `target` date at `index`.\r\n       * If the `target` is null then the date will be cleared.\r\n       * If multi-date is being used then it will be removed from the array.\r\n       * If `target` is valid and multi-date is used then if `index` is\r\n       * provided the date at that index will be replaced, otherwise it is appended.\r\n       * @param target\r\n       * @param index\r\n       */\r\n      setValue(target, index) {\r\n          const noIndex = typeof index === 'undefined', isClear = !target && noIndex;\r\n          let oldDate = this.optionsStore.unset ? null : this._dates[index];\r\n          if (!oldDate && !this.optionsStore.unset && noIndex && isClear) {\r\n              oldDate = this.lastPicked;\r\n          }\r\n          if (target && oldDate?.isSame(target)) {\r\n              this.updateInput(target);\r\n              return;\r\n          }\r\n          // case of calling setValue(null)\r\n          if (!target) {\r\n              if (!this.optionsStore.options.multipleDates ||\r\n                  this._dates.length === 1 ||\r\n                  isClear) {\r\n                  this.optionsStore.unset = true;\r\n                  this._dates = [];\r\n              }\r\n              else {\r\n                  this._dates.splice(index, 1);\r\n              }\r\n              this.updateInput();\r\n              this._eventEmitters.triggerEvent.emit({\r\n                  type: Namespace.events.change,\r\n                  date: undefined,\r\n                  oldDate,\r\n                  isClear,\r\n                  isValid: true,\r\n              });\r\n              this._eventEmitters.updateDisplay.emit('all');\r\n              return;\r\n          }\r\n          index = index || 0;\r\n          target = target.clone;\r\n          // minute stepping is being used, force the minute to the closest value\r\n          if (this.optionsStore.options.stepping !== 1) {\r\n              target.minutes =\r\n                  Math.round(target.minutes / this.optionsStore.options.stepping) *\r\n                      this.optionsStore.options.stepping;\r\n              target.seconds = 0;\r\n          }\r\n          if (this.validation.isValid(target)) {\r\n              this._dates[index] = target;\r\n              this._eventEmitters.updateViewDate.emit(target.clone);\r\n              this.updateInput(target);\r\n              this.optionsStore.unset = false;\r\n              this._eventEmitters.updateDisplay.emit('all');\r\n              this._eventEmitters.triggerEvent.emit({\r\n                  type: Namespace.events.change,\r\n                  date: target,\r\n                  oldDate,\r\n                  isClear,\r\n                  isValid: true,\r\n              });\r\n              return;\r\n          }\r\n          if (this.optionsStore.options.keepInvalid) {\r\n              this._dates[index] = target;\r\n              this._eventEmitters.updateViewDate.emit(target.clone);\r\n              this.updateInput(target);\r\n              this._eventEmitters.triggerEvent.emit({\r\n                  type: Namespace.events.change,\r\n                  date: target,\r\n                  oldDate,\r\n                  isClear,\r\n                  isValid: false,\r\n              });\r\n          }\r\n          this._eventEmitters.triggerEvent.emit({\r\n              type: Namespace.events.error,\r\n              reason: Namespace.errorMessages.failedToSetInvalidDate,\r\n              date: target,\r\n              oldDate,\r\n          });\r\n      }\r\n  }\n\n  var ActionTypes;\r\n  (function (ActionTypes) {\r\n      ActionTypes[\"next\"] = \"next\";\r\n      ActionTypes[\"previous\"] = \"previous\";\r\n      ActionTypes[\"changeCalendarView\"] = \"changeCalendarView\";\r\n      ActionTypes[\"selectMonth\"] = \"selectMonth\";\r\n      ActionTypes[\"selectYear\"] = \"selectYear\";\r\n      ActionTypes[\"selectDecade\"] = \"selectDecade\";\r\n      ActionTypes[\"selectDay\"] = \"selectDay\";\r\n      ActionTypes[\"selectHour\"] = \"selectHour\";\r\n      ActionTypes[\"selectMinute\"] = \"selectMinute\";\r\n      ActionTypes[\"selectSecond\"] = \"selectSecond\";\r\n      ActionTypes[\"incrementHours\"] = \"incrementHours\";\r\n      ActionTypes[\"incrementMinutes\"] = \"incrementMinutes\";\r\n      ActionTypes[\"incrementSeconds\"] = \"incrementSeconds\";\r\n      ActionTypes[\"decrementHours\"] = \"decrementHours\";\r\n      ActionTypes[\"decrementMinutes\"] = \"decrementMinutes\";\r\n      ActionTypes[\"decrementSeconds\"] = \"decrementSeconds\";\r\n      ActionTypes[\"toggleMeridiem\"] = \"toggleMeridiem\";\r\n      ActionTypes[\"togglePicker\"] = \"togglePicker\";\r\n      ActionTypes[\"showClock\"] = \"showClock\";\r\n      ActionTypes[\"showHours\"] = \"showHours\";\r\n      ActionTypes[\"showMinutes\"] = \"showMinutes\";\r\n      ActionTypes[\"showSeconds\"] = \"showSeconds\";\r\n      ActionTypes[\"clear\"] = \"clear\";\r\n      ActionTypes[\"close\"] = \"close\";\r\n      ActionTypes[\"today\"] = \"today\";\r\n  })(ActionTypes || (ActionTypes = {}));\r\n  var ActionTypes$1 = ActionTypes;\n\n  /**\r\n   * Creates and updates the grid for `date`\r\n   */\r\n  class DateDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement(\"div\");\r\n          container.classList.add(Namespace.css.daysContainer);\r\n          container.append(...this._daysOfTheWeek());\r\n          if (this.optionsStore.options.display.calendarWeeks) {\r\n              const div = document.createElement(\"div\");\r\n              div.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n              container.appendChild(div);\r\n          }\r\n          for (let i = 0; i < 42; i++) {\r\n              if (i !== 0 && i % 7 === 0) {\r\n                  if (this.optionsStore.options.display.calendarWeeks) {\r\n                      const div = document.createElement(\"div\");\r\n                      div.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n                      container.appendChild(div);\r\n                  }\r\n              }\r\n              const div = document.createElement(\"div\");\r\n              div.setAttribute(\"data-action\", ActionTypes$1.selectDay);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.daysContainer)[0];\r\n          if (this.optionsStore.currentView === \"calendar\") {\r\n              const [previous, switcher, next] = container.parentElement\r\n                  .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                  .getElementsByTagName(\"div\");\r\n              switcher.setAttribute(Namespace.css.daysContainer, this.optionsStore.viewDate.format(this.optionsStore.options.localization.dayViewHeaderFormat));\r\n              this.optionsStore.options.display.components.month\r\n                  ? switcher.classList.remove(Namespace.css.disabled)\r\n                  : switcher.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.month), Unit.month)\r\n                  ? previous.classList.remove(Namespace.css.disabled)\r\n                  : previous.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.month), Unit.month)\r\n                  ? next.classList.remove(Namespace.css.disabled)\r\n                  : next.classList.add(Namespace.css.disabled);\r\n          }\r\n          let innerDate = this.optionsStore.viewDate.clone\r\n              .startOf(Unit.month)\r\n              .startOf(\"weekDay\", this.optionsStore.options.localization.startOfTheWeek)\r\n              .manipulate(12, Unit.hours);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectDay}\"], .${Namespace.css.calendarWeeks}`)\r\n              .forEach((containerClone) => {\r\n              if (this.optionsStore.options.display.calendarWeeks &&\r\n                  containerClone.classList.contains(Namespace.css.calendarWeeks)) {\r\n                  if (containerClone.innerText === \"#\")\r\n                      return;\r\n                  containerClone.innerText = `${innerDate.week}`;\r\n                  return;\r\n              }\r\n              let classes = [];\r\n              classes.push(Namespace.css.day);\r\n              if (innerDate.isBefore(this.optionsStore.viewDate, Unit.month)) {\r\n                  classes.push(Namespace.css.old);\r\n              }\r\n              if (innerDate.isAfter(this.optionsStore.viewDate, Unit.month)) {\r\n                  classes.push(Namespace.css.new);\r\n              }\r\n              if (!this.optionsStore.unset &&\r\n                  this.dates.isPicked(innerDate, Unit.date)) {\r\n                  classes.push(Namespace.css.active);\r\n              }\r\n              if (!this.validation.isValid(innerDate, Unit.date)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              if (innerDate.isSame(new DateTime(), Unit.date)) {\r\n                  classes.push(Namespace.css.today);\r\n              }\r\n              if (innerDate.weekDay === 0 || innerDate.weekDay === 6) {\r\n                  classes.push(Namespace.css.weekend);\r\n              }\r\n              paint(Unit.date, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute(\"data-value\", `${innerDate.year}-${innerDate.monthFormatted}-${innerDate.dateFormatted}`);\r\n              containerClone.setAttribute(\"data-day\", `${innerDate.date}`);\r\n              containerClone.innerText = innerDate.format({ day: \"numeric\" });\r\n              innerDate.manipulate(1, Unit.date);\r\n          });\r\n      }\r\n      /***\r\n       * Generates an html row that contains the days of the week.\r\n       * @private\r\n       */\r\n      _daysOfTheWeek() {\r\n          let innerDate = this.optionsStore.viewDate.clone\r\n              .startOf(\"weekDay\", this.optionsStore.options.localization.startOfTheWeek)\r\n              .startOf(Unit.date);\r\n          const row = [];\r\n          document.createElement(\"div\");\r\n          if (this.optionsStore.options.display.calendarWeeks) {\r\n              const htmlDivElement = document.createElement(\"div\");\r\n              htmlDivElement.classList.add(Namespace.css.calendarWeeks, Namespace.css.noHighlight);\r\n              htmlDivElement.innerText = \"#\";\r\n              row.push(htmlDivElement);\r\n          }\r\n          for (let i = 0; i < 7; i++) {\r\n              const htmlDivElement = document.createElement(\"div\");\r\n              htmlDivElement.classList.add(Namespace.css.dayOfTheWeek, Namespace.css.noHighlight);\r\n              htmlDivElement.innerText = innerDate.format({ weekday: \"short\" });\r\n              innerDate.manipulate(1, Unit.date);\r\n              row.push(htmlDivElement);\r\n          }\r\n          return row;\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `month`\r\n   */\r\n  class MonthDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.monthsContainer);\r\n          for (let i = 0; i < 12; i++) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectMonth);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.monthsContainer)[0];\r\n          if (this.optionsStore.currentView === 'months') {\r\n              const [previous, switcher, next] = container.parentElement\r\n                  .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                  .getElementsByTagName('div');\r\n              switcher.setAttribute(Namespace.css.monthsContainer, this.optionsStore.viewDate.format({ year: 'numeric' }));\r\n              this.optionsStore.options.display.components.year\r\n                  ? switcher.classList.remove(Namespace.css.disabled)\r\n                  : switcher.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.year), Unit.year)\r\n                  ? previous.classList.remove(Namespace.css.disabled)\r\n                  : previous.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.year), Unit.year)\r\n                  ? next.classList.remove(Namespace.css.disabled)\r\n                  : next.classList.add(Namespace.css.disabled);\r\n          }\r\n          let innerDate = this.optionsStore.viewDate.clone.startOf(Unit.year);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectMonth}\"]`)\r\n              .forEach((containerClone, index) => {\r\n              let classes = [];\r\n              classes.push(Namespace.css.month);\r\n              if (!this.optionsStore.unset &&\r\n                  this.dates.isPicked(innerDate, Unit.month)) {\r\n                  classes.push(Namespace.css.active);\r\n              }\r\n              if (!this.validation.isValid(innerDate, Unit.month)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.month, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute('data-value', `${index}`);\r\n              containerClone.innerText = `${innerDate.format({ month: 'short' })}`;\r\n              innerDate.manipulate(1, Unit.month);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `year`\r\n   */\r\n  class YearDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement(\"div\");\r\n          container.classList.add(Namespace.css.yearsContainer);\r\n          for (let i = 0; i < 12; i++) {\r\n              const div = document.createElement(\"div\");\r\n              div.setAttribute(\"data-action\", ActionTypes$1.selectYear);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          this._startYear = this.optionsStore.viewDate.clone.manipulate(-1, Unit.year);\r\n          this._endYear = this.optionsStore.viewDate.clone.manipulate(10, Unit.year);\r\n          const container = widget.getElementsByClassName(Namespace.css.yearsContainer)[0];\r\n          if (this.optionsStore.currentView === \"years\") {\r\n              const [previous, switcher, next] = container.parentElement\r\n                  .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n                  .getElementsByTagName(\"div\");\r\n              switcher.setAttribute(Namespace.css.yearsContainer, `${this._startYear.format({ year: \"numeric\" })}-${this._endYear.format({ year: \"numeric\" })}`);\r\n              this.optionsStore.options.display.components.decades\r\n                  ? switcher.classList.remove(Namespace.css.disabled)\r\n                  : switcher.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this._startYear, Unit.year)\r\n                  ? previous.classList.remove(Namespace.css.disabled)\r\n                  : previous.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this._endYear, Unit.year)\r\n                  ? next.classList.remove(Namespace.css.disabled)\r\n                  : next.classList.add(Namespace.css.disabled);\r\n          }\r\n          let innerDate = this.optionsStore.viewDate.clone\r\n              .startOf(Unit.year)\r\n              .manipulate(-1, Unit.year);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectYear}\"]`)\r\n              .forEach((containerClone) => {\r\n              let classes = [];\r\n              classes.push(Namespace.css.year);\r\n              if (!this.optionsStore.unset &&\r\n                  this.dates.isPicked(innerDate, Unit.year)) {\r\n                  classes.push(Namespace.css.active);\r\n              }\r\n              if (!this.validation.isValid(innerDate, Unit.year)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.year, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute(\"data-value\", `${innerDate.year}`);\r\n              containerClone.innerText = innerDate.format({ year: \"numeric\" });\r\n              innerDate.manipulate(1, Unit.year);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `seconds`\r\n   */\r\n  class DecadeDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement(\"div\");\r\n          container.classList.add(Namespace.css.decadesContainer);\r\n          for (let i = 0; i < 12; i++) {\r\n              const div = document.createElement(\"div\");\r\n              div.setAttribute(\"data-action\", ActionTypes$1.selectDecade);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const [start, end] = Dates.getStartEndYear(100, this.optionsStore.viewDate.year);\r\n          this._startDecade = this.optionsStore.viewDate.clone.startOf(Unit.year);\r\n          this._startDecade.year = start;\r\n          this._endDecade = this.optionsStore.viewDate.clone.startOf(Unit.year);\r\n          this._endDecade.year = end;\r\n          const container = widget.getElementsByClassName(Namespace.css.decadesContainer)[0];\r\n          const [previous, switcher, next] = container.parentElement\r\n              .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n              .getElementsByTagName(\"div\");\r\n          if (this.optionsStore.currentView === 'decades') {\r\n              switcher.setAttribute(Namespace.css.decadesContainer, `${this._startDecade.format({ year: \"numeric\" })}-${this._endDecade.format({ year: \"numeric\" })}`);\r\n              this.validation.isValid(this._startDecade, Unit.year)\r\n                  ? previous.classList.remove(Namespace.css.disabled)\r\n                  : previous.classList.add(Namespace.css.disabled);\r\n              this.validation.isValid(this._endDecade, Unit.year)\r\n                  ? next.classList.remove(Namespace.css.disabled)\r\n                  : next.classList.add(Namespace.css.disabled);\r\n          }\r\n          const pickedYears = this.dates.picked.map((x) => x.year);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectDecade}\"]`)\r\n              .forEach((containerClone, index) => {\r\n              if (index === 0) {\r\n                  containerClone.classList.add(Namespace.css.old);\r\n                  if (this._startDecade.year - 10 < 0) {\r\n                      containerClone.textContent = \" \";\r\n                      previous.classList.add(Namespace.css.disabled);\r\n                      containerClone.classList.add(Namespace.css.disabled);\r\n                      containerClone.setAttribute(\"data-value\", ``);\r\n                      return;\r\n                  }\r\n                  else {\r\n                      containerClone.innerText = this._startDecade.clone.manipulate(-10, Unit.year).format({ year: \"numeric\" });\r\n                      containerClone.setAttribute(\"data-value\", `${this._startDecade.year}`);\r\n                      return;\r\n                  }\r\n              }\r\n              let classes = [];\r\n              classes.push(Namespace.css.decade);\r\n              const startDecadeYear = this._startDecade.year;\r\n              const endDecadeYear = this._startDecade.year + 9;\r\n              if (!this.optionsStore.unset &&\r\n                  pickedYears.filter((x) => x >= startDecadeYear && x <= endDecadeYear)\r\n                      .length > 0) {\r\n                  classes.push(Namespace.css.active);\r\n              }\r\n              paint(\"decade\", this._startDecade, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute(\"data-value\", `${this._startDecade.year}`);\r\n              containerClone.innerText = `${this._startDecade.format({ year: \"numeric\" })}`;\r\n              this._startDecade.manipulate(10, Unit.year);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates the clock display\r\n   */\r\n  class TimeDisplay {\r\n      constructor() {\r\n          this._gridColumns = '';\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the clock display\r\n       * @private\r\n       */\r\n      getPicker(iconTag) {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.clockContainer);\r\n          container.append(...this._grid(iconTag));\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the various elements with in the clock display\r\n       * like the current hour and if the manipulation icons are enabled.\r\n       * @private\r\n       */\r\n      _update(widget) {\r\n          const timesDiv = (widget.getElementsByClassName(Namespace.css.clockContainer)[0]);\r\n          const lastPicked = (this.dates.lastPicked || this.optionsStore.viewDate).clone;\r\n          timesDiv\r\n              .querySelectorAll('.disabled')\r\n              .forEach((element) => element.classList.remove(Namespace.css.disabled));\r\n          if (this.optionsStore.options.display.components.hours) {\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.hours), Unit.hours)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.incrementHours}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.hours), Unit.hours)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.decrementHours}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              timesDiv.querySelector(`[data-time-component=${Unit.hours}]`).innerText = this.optionsStore.options.display.components.useTwentyfourHour\r\n                  ? lastPicked.hoursFormatted\r\n                  : lastPicked.twelveHoursFormatted;\r\n          }\r\n          if (this.optionsStore.options.display.components.minutes) {\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.minutes), Unit.minutes)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.incrementMinutes}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.minutes), Unit.minutes)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.decrementMinutes}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              timesDiv.querySelector(`[data-time-component=${Unit.minutes}]`).innerText = lastPicked.minutesFormatted;\r\n          }\r\n          if (this.optionsStore.options.display.components.seconds) {\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(1, Unit.seconds), Unit.seconds)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.incrementSeconds}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              if (!this.validation.isValid(this.optionsStore.viewDate.clone.manipulate(-1, Unit.seconds), Unit.seconds)) {\r\n                  timesDiv\r\n                      .querySelector(`[data-action=${ActionTypes$1.decrementSeconds}]`)\r\n                      .classList.add(Namespace.css.disabled);\r\n              }\r\n              timesDiv.querySelector(`[data-time-component=${Unit.seconds}]`).innerText = lastPicked.secondsFormatted;\r\n          }\r\n          if (!this.optionsStore.options.display.components.useTwentyfourHour) {\r\n              const toggle = timesDiv.querySelector(`[data-action=${ActionTypes$1.toggleMeridiem}]`);\r\n              toggle.innerText = lastPicked.meridiem();\r\n              if (!this.validation.isValid(lastPicked.clone.manipulate(lastPicked.hours >= 12 ? -12 : 12, Unit.hours))) {\r\n                  toggle.classList.add(Namespace.css.disabled);\r\n              }\r\n              else {\r\n                  toggle.classList.remove(Namespace.css.disabled);\r\n              }\r\n          }\r\n          timesDiv.style.gridTemplateAreas = `\"${this._gridColumns}\"`;\r\n      }\r\n      /**\r\n       * Creates the table for the clock display depending on what options are selected.\r\n       * @private\r\n       */\r\n      _grid(iconTag) {\r\n          this._gridColumns = '';\r\n          const top = [], middle = [], bottom = [], separator = document.createElement('div'), upIcon = iconTag(this.optionsStore.options.display.icons.up), downIcon = iconTag(this.optionsStore.options.display.icons.down);\r\n          separator.classList.add(Namespace.css.separator, Namespace.css.noHighlight);\r\n          const separatorColon = separator.cloneNode(true);\r\n          separatorColon.innerHTML = ':';\r\n          const getSeparator = (colon = false) => {\r\n              return colon\r\n                  ? separatorColon.cloneNode(true)\r\n                  : separator.cloneNode(true);\r\n          };\r\n          if (this.optionsStore.options.display.components.hours) {\r\n              let divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.incrementHour);\r\n              divElement.setAttribute('data-action', ActionTypes$1.incrementHours);\r\n              divElement.appendChild(upIcon.cloneNode(true));\r\n              top.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.pickHour);\r\n              divElement.setAttribute('data-action', ActionTypes$1.showHours);\r\n              divElement.setAttribute('data-time-component', Unit.hours);\r\n              middle.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.decrementHour);\r\n              divElement.setAttribute('data-action', ActionTypes$1.decrementHours);\r\n              divElement.appendChild(downIcon.cloneNode(true));\r\n              bottom.push(divElement);\r\n              this._gridColumns += 'a';\r\n          }\r\n          if (this.optionsStore.options.display.components.minutes) {\r\n              this._gridColumns += ' a';\r\n              if (this.optionsStore.options.display.components.hours) {\r\n                  top.push(getSeparator());\r\n                  middle.push(getSeparator(true));\r\n                  bottom.push(getSeparator());\r\n                  this._gridColumns += ' a';\r\n              }\r\n              let divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.incrementMinute);\r\n              divElement.setAttribute('data-action', ActionTypes$1.incrementMinutes);\r\n              divElement.appendChild(upIcon.cloneNode(true));\r\n              top.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.pickMinute);\r\n              divElement.setAttribute('data-action', ActionTypes$1.showMinutes);\r\n              divElement.setAttribute('data-time-component', Unit.minutes);\r\n              middle.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.decrementMinute);\r\n              divElement.setAttribute('data-action', ActionTypes$1.decrementMinutes);\r\n              divElement.appendChild(downIcon.cloneNode(true));\r\n              bottom.push(divElement);\r\n          }\r\n          if (this.optionsStore.options.display.components.seconds) {\r\n              this._gridColumns += ' a';\r\n              if (this.optionsStore.options.display.components.minutes) {\r\n                  top.push(getSeparator());\r\n                  middle.push(getSeparator(true));\r\n                  bottom.push(getSeparator());\r\n                  this._gridColumns += ' a';\r\n              }\r\n              let divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.incrementSecond);\r\n              divElement.setAttribute('data-action', ActionTypes$1.incrementSeconds);\r\n              divElement.appendChild(upIcon.cloneNode(true));\r\n              top.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.pickSecond);\r\n              divElement.setAttribute('data-action', ActionTypes$1.showSeconds);\r\n              divElement.setAttribute('data-time-component', Unit.seconds);\r\n              middle.push(divElement);\r\n              divElement = document.createElement('div');\r\n              divElement.setAttribute('title', this.optionsStore.options.localization.decrementSecond);\r\n              divElement.setAttribute('data-action', ActionTypes$1.decrementSeconds);\r\n              divElement.appendChild(downIcon.cloneNode(true));\r\n              bottom.push(divElement);\r\n          }\r\n          if (!this.optionsStore.options.display.components.useTwentyfourHour) {\r\n              this._gridColumns += ' a';\r\n              let divElement = getSeparator();\r\n              top.push(divElement);\r\n              let button = document.createElement('button');\r\n              button.setAttribute('title', this.optionsStore.options.localization.toggleMeridiem);\r\n              button.setAttribute('data-action', ActionTypes$1.toggleMeridiem);\r\n              button.setAttribute('tabindex', '-1');\r\n              if (Namespace.css.toggleMeridiem.includes(',')) { //todo move this to paint function?\r\n                  button.classList.add(...Namespace.css.toggleMeridiem.split(','));\r\n              }\r\n              else\r\n                  button.classList.add(Namespace.css.toggleMeridiem);\r\n              divElement = document.createElement('div');\r\n              divElement.classList.add(Namespace.css.noHighlight);\r\n              divElement.appendChild(button);\r\n              middle.push(divElement);\r\n              divElement = getSeparator();\r\n              bottom.push(divElement);\r\n          }\r\n          this._gridColumns = this._gridColumns.trim();\r\n          return [...top, ...middle, ...bottom];\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `hours`\r\n   */\r\n  class HourDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.hourContainer);\r\n          for (let i = 0; i <\r\n              (this.optionsStore.options.display.components.useTwentyfourHour ? 24 : 12); i++) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectHour);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.hourContainer)[0];\r\n          let innerDate = this.optionsStore.viewDate.clone.startOf(Unit.date);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectHour}\"]`)\r\n              .forEach((containerClone) => {\r\n              let classes = [];\r\n              classes.push(Namespace.css.hour);\r\n              if (!this.validation.isValid(innerDate, Unit.hours)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.hours, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute('data-value', `${innerDate.hours}`);\r\n              containerClone.innerText = this.optionsStore.options.display.components\r\n                  .useTwentyfourHour\r\n                  ? innerDate.hoursFormatted\r\n                  : innerDate.twelveHoursFormatted;\r\n              innerDate.manipulate(1, Unit.hours);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `minutes`\r\n   */\r\n  class MinuteDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.minuteContainer);\r\n          let step = this.optionsStore.options.stepping === 1\r\n              ? 5\r\n              : this.optionsStore.options.stepping;\r\n          for (let i = 0; i < 60 / step; i++) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectMinute);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.minuteContainer)[0];\r\n          let innerDate = this.optionsStore.viewDate.clone.startOf(Unit.hours);\r\n          let step = this.optionsStore.options.stepping === 1\r\n              ? 5\r\n              : this.optionsStore.options.stepping;\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectMinute}\"]`)\r\n              .forEach((containerClone) => {\r\n              let classes = [];\r\n              classes.push(Namespace.css.minute);\r\n              if (!this.validation.isValid(innerDate, Unit.minutes)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.minutes, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute('data-value', `${innerDate.minutes}`);\r\n              containerClone.innerText = innerDate.minutesFormatted;\r\n              innerDate.manipulate(step, Unit.minutes);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Creates and updates the grid for `seconds`\r\n   */\r\n  class secondDisplay {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n      }\r\n      /**\r\n       * Build the container html for the display\r\n       * @private\r\n       */\r\n      getPicker() {\r\n          const container = document.createElement('div');\r\n          container.classList.add(Namespace.css.secondContainer);\r\n          for (let i = 0; i < 12; i++) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.selectSecond);\r\n              container.appendChild(div);\r\n          }\r\n          return container;\r\n      }\r\n      /**\r\n       * Populates the grid and updates enabled states\r\n       * @private\r\n       */\r\n      _update(widget, paint) {\r\n          const container = widget.getElementsByClassName(Namespace.css.secondContainer)[0];\r\n          let innerDate = this.optionsStore.viewDate.clone.startOf(Unit.minutes);\r\n          container\r\n              .querySelectorAll(`[data-action=\"${ActionTypes$1.selectSecond}\"]`)\r\n              .forEach((containerClone) => {\r\n              let classes = [];\r\n              classes.push(Namespace.css.second);\r\n              if (!this.validation.isValid(innerDate, Unit.seconds)) {\r\n                  classes.push(Namespace.css.disabled);\r\n              }\r\n              paint(Unit.seconds, innerDate, classes, containerClone);\r\n              containerClone.classList.remove(...containerClone.classList);\r\n              containerClone.classList.add(...classes);\r\n              containerClone.setAttribute('data-value', `${innerDate.seconds}`);\r\n              containerClone.innerText = innerDate.secondsFormatted;\r\n              innerDate.manipulate(5, Unit.seconds);\r\n          });\r\n      }\r\n  }\n\n  /**\r\n   * Provides a collapse functionality to the view changes\r\n   */\r\n  class Collapse {\r\n      /**\r\n       * Flips the show/hide state of `target`\r\n       * @param target html element to affect.\r\n       */\r\n      static toggle(target) {\r\n          if (target.classList.contains(Namespace.css.show)) {\r\n              this.hide(target);\r\n          }\r\n          else {\r\n              this.show(target);\r\n          }\r\n      }\r\n      /**\r\n       * Skips any animation or timeouts and immediately set the element to show.\r\n       * @param target\r\n       */\r\n      static showImmediately(target) {\r\n          target.classList.remove(Namespace.css.collapsing);\r\n          target.classList.add(Namespace.css.collapse, Namespace.css.show);\r\n          target.style.height = '';\r\n      }\r\n      /**\r\n       * If `target` is not already showing, then show after the animation.\r\n       * @param target\r\n       */\r\n      static show(target) {\r\n          if (target.classList.contains(Namespace.css.collapsing) ||\r\n              target.classList.contains(Namespace.css.show))\r\n              return;\r\n          const complete = () => {\r\n              Collapse.showImmediately(target);\r\n          };\r\n          target.style.height = '0';\r\n          target.classList.remove(Namespace.css.collapse);\r\n          target.classList.add(Namespace.css.collapsing);\r\n          setTimeout(complete, this.getTransitionDurationFromElement(target));\r\n          target.style.height = `${target.scrollHeight}px`;\r\n      }\r\n      /**\r\n       * Skips any animation or timeouts and immediately set the element to hide.\r\n       * @param target\r\n       */\r\n      static hideImmediately(target) {\r\n          if (!target)\r\n              return;\r\n          target.classList.remove(Namespace.css.collapsing, Namespace.css.show);\r\n          target.classList.add(Namespace.css.collapse);\r\n      }\r\n      /**\r\n       * If `target` is not already hidden, then hide after the animation.\r\n       * @param target HTML Element\r\n       */\r\n      static hide(target) {\r\n          if (target.classList.contains(Namespace.css.collapsing) ||\r\n              !target.classList.contains(Namespace.css.show))\r\n              return;\r\n          const complete = () => {\r\n              Collapse.hideImmediately(target);\r\n          };\r\n          target.style.height = `${target.getBoundingClientRect()['height']}px`;\r\n          const reflow = (element) => element.offsetHeight;\r\n          reflow(target);\r\n          target.classList.remove(Namespace.css.collapse, Namespace.css.show);\r\n          target.classList.add(Namespace.css.collapsing);\r\n          target.style.height = '';\r\n          setTimeout(complete, this.getTransitionDurationFromElement(target));\r\n      }\r\n  }\r\n  /**\r\n   * Gets the transition duration from the `element` by getting css properties\r\n   * `transition-duration` and `transition-delay`\r\n   * @param element HTML Element\r\n   */\r\n  Collapse.getTransitionDurationFromElement = (element) => {\r\n      if (!element) {\r\n          return 0;\r\n      }\r\n      // Get transition-duration of the element\r\n      let { transitionDuration, transitionDelay } = window.getComputedStyle(element);\r\n      const floatTransitionDuration = Number.parseFloat(transitionDuration);\r\n      const floatTransitionDelay = Number.parseFloat(transitionDelay);\r\n      // Return 0 if element or transition duration is not found\r\n      if (!floatTransitionDuration && !floatTransitionDelay) {\r\n          return 0;\r\n      }\r\n      // If multiple durations are defined, take the first\r\n      transitionDuration = transitionDuration.split(',')[0];\r\n      transitionDelay = transitionDelay.split(',')[0];\r\n      return ((Number.parseFloat(transitionDuration) +\r\n          Number.parseFloat(transitionDelay)) *\r\n          1000);\r\n  };\n\n  /**\r\n   * Main class for all things display related.\r\n   */\r\n  class Display {\r\n      constructor() {\r\n          this._isVisible = false;\r\n          /**\r\n           * A document click event to hide the widget if click is outside\r\n           * @private\r\n           * @param e MouseEvent\r\n           */\r\n          this._documentClickEvent = (e) => {\r\n              if (this.optionsStore.options.debug || window.debug)\r\n                  return;\r\n              if (this._isVisible &&\r\n                  !e.composedPath().includes(this.widget) && // click inside the widget\r\n                  !e.composedPath()?.includes(this.optionsStore.element) // click on the element\r\n              ) {\r\n                  this.hide();\r\n              }\r\n          };\r\n          /**\r\n           * Click event for any action like selecting a date\r\n           * @param e MouseEvent\r\n           * @private\r\n           */\r\n          this._actionsClickEvent = (e) => {\r\n              this._eventEmitters.action.emit({ e: e });\r\n          };\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.validation = serviceLocator.locate(Validation);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.dateDisplay = serviceLocator.locate(DateDisplay);\r\n          this.monthDisplay = serviceLocator.locate(MonthDisplay);\r\n          this.yearDisplay = serviceLocator.locate(YearDisplay);\r\n          this.decadeDisplay = serviceLocator.locate(DecadeDisplay);\r\n          this.timeDisplay = serviceLocator.locate(TimeDisplay);\r\n          this.hourDisplay = serviceLocator.locate(HourDisplay);\r\n          this.minuteDisplay = serviceLocator.locate(MinuteDisplay);\r\n          this.secondDisplay = serviceLocator.locate(secondDisplay);\r\n          this._eventEmitters = serviceLocator.locate(EventEmitters);\r\n          this._widget = undefined;\r\n          this._eventEmitters.updateDisplay.subscribe((result) => {\r\n              this._update(result);\r\n          });\r\n      }\r\n      /**\r\n       * Returns the widget body or undefined\r\n       * @private\r\n       */\r\n      get widget() {\r\n          return this._widget;\r\n      }\r\n      /**\r\n       * Returns this visible state of the picker (shown)\r\n       */\r\n      get isVisible() {\r\n          return this._isVisible;\r\n      }\r\n      /**\r\n       * Updates the table for a particular unit. Used when an option as changed or\r\n       * whenever the class list might need to be refreshed.\r\n       * @param unit\r\n       * @private\r\n       */\r\n      _update(unit) {\r\n          if (!this.widget)\r\n              return;\r\n          //todo do I want some kind of error catching or other guards here?\r\n          switch (unit) {\r\n              case Unit.seconds:\r\n                  this.secondDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.minutes:\r\n                  this.minuteDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.hours:\r\n                  this.hourDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.date:\r\n                  this.dateDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.month:\r\n                  this.monthDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Unit.year:\r\n                  this.yearDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case 'clock':\r\n                  if (!this._hasTime)\r\n                      break;\r\n                  this.timeDisplay._update(this.widget);\r\n                  this._update(Unit.hours);\r\n                  this._update(Unit.minutes);\r\n                  this._update(Unit.seconds);\r\n                  break;\r\n              case 'calendar':\r\n                  this._update(Unit.date);\r\n                  this._update(Unit.year);\r\n                  this._update(Unit.month);\r\n                  this.decadeDisplay._update(this.widget, this.paint);\r\n                  this._updateCalendarHeader();\r\n                  break;\r\n              case 'all':\r\n                  if (this._hasTime) {\r\n                      this._update('clock');\r\n                  }\r\n                  if (this._hasDate) {\r\n                      this._update('calendar');\r\n                  }\r\n          }\r\n      }\r\n      // noinspection JSUnusedLocalSymbols\r\n      /**\r\n       * Allows developers to add/remove classes from an element.\r\n       * @param _unit\r\n       * @param _date\r\n       * @param _classes\r\n       * @param _element\r\n       */\r\n      paint(_unit, _date, _classes, _element) {\r\n          // implemented in plugin\r\n      }\r\n      /**\r\n       * Shows the picker and creates a Popper instance if needed.\r\n       * Add document click event to hide when clicking outside the picker.\r\n       * fires Events#show\r\n       */\r\n      show() {\r\n          if (this.widget == undefined) {\r\n              if (this.dates.picked.length == 0) {\r\n                  if (this.optionsStore.options.useCurrent &&\r\n                      !this.optionsStore.options.defaultDate) {\r\n                      const date = new DateTime().setLocale(this.optionsStore.options.localization.locale);\r\n                      if (!this.optionsStore.options.keepInvalid) {\r\n                          let tries = 0;\r\n                          let direction = 1;\r\n                          if (this.optionsStore.options.restrictions.maxDate?.isBefore(date)) {\r\n                              direction = -1;\r\n                          }\r\n                          while (!this.validation.isValid(date)) {\r\n                              date.manipulate(direction, Unit.date);\r\n                              if (tries > 31)\r\n                                  break;\r\n                              tries++;\r\n                          }\r\n                      }\r\n                      this.dates.setValue(date);\r\n                  }\r\n                  if (this.optionsStore.options.defaultDate) {\r\n                      this.dates.setValue(this.optionsStore.options.defaultDate);\r\n                  }\r\n              }\r\n              this._buildWidget();\r\n              this._updateTheme();\r\n              // If modeView is only clock\r\n              const onlyClock = this._hasTime && !this._hasDate;\r\n              // reset the view to the clock if there's no date components\r\n              if (onlyClock) {\r\n                  this.optionsStore.currentView = 'clock';\r\n                  this._eventEmitters.action.emit({\r\n                      e: null,\r\n                      action: ActionTypes$1.showClock,\r\n                  });\r\n              }\r\n              // otherwise return to the calendar view\r\n              if (!this.optionsStore.currentCalendarViewMode) {\r\n                  this.optionsStore.currentCalendarViewMode =\r\n                      this.optionsStore.minimumCalendarViewMode;\r\n              }\r\n              if (!onlyClock &&\r\n                  this.optionsStore.options.display.viewMode !== 'clock') {\r\n                  if (this._hasTime) {\r\n                      if (!this.optionsStore.options.display.sideBySide) {\r\n                          Collapse.hideImmediately(this.widget.querySelector(`div.${Namespace.css.timeContainer}`));\r\n                      }\r\n                      else {\r\n                          Collapse.show(this.widget.querySelector(`div.${Namespace.css.timeContainer}`));\r\n                      }\r\n                  }\r\n                  Collapse.show(this.widget.querySelector(`div.${Namespace.css.dateContainer}`));\r\n              }\r\n              if (this._hasDate) {\r\n                  this._showMode();\r\n              }\r\n              if (!this.optionsStore.options.display.inline) {\r\n                  // If needed to change the parent container\r\n                  const container = this.optionsStore.options?.container || document.body;\r\n                  container.appendChild(this.widget);\r\n                  this.createPopup(this.optionsStore.element, this.widget, {\r\n                      modifiers: [{ name: 'eventListeners', enabled: true }],\r\n                      //#2400\r\n                      placement: document.documentElement.dir === 'rtl'\r\n                          ? 'bottom-end'\r\n                          : 'bottom-start',\r\n                  }).then();\r\n              }\r\n              else {\r\n                  this.optionsStore.element.appendChild(this.widget);\r\n              }\r\n              if (this.optionsStore.options.display.viewMode == 'clock') {\r\n                  this._eventEmitters.action.emit({\r\n                      e: null,\r\n                      action: ActionTypes$1.showClock,\r\n                  });\r\n              }\r\n              this.widget\r\n                  .querySelectorAll('[data-action]')\r\n                  .forEach((element) => element.addEventListener('click', this._actionsClickEvent));\r\n              // show the clock when using sideBySide\r\n              if (this._hasTime && this.optionsStore.options.display.sideBySide) {\r\n                  this.timeDisplay._update(this.widget);\r\n                  this.widget.getElementsByClassName(Namespace.css.clockContainer)[0].style.display = 'grid';\r\n              }\r\n          }\r\n          this.widget.classList.add(Namespace.css.show);\r\n          if (!this.optionsStore.options.display.inline) {\r\n              this.updatePopup();\r\n              document.addEventListener('click', this._documentClickEvent);\r\n          }\r\n          this._eventEmitters.triggerEvent.emit({ type: Namespace.events.show });\r\n          this._isVisible = true;\r\n      }\r\n      async createPopup(element, widget, options) {\r\n          let createPopperFunction;\r\n          if (window?.Popper) {\r\n              createPopperFunction = window?.Popper?.createPopper;\r\n          }\r\n          else {\r\n              const { createPopper } = await import('@popperjs/core');\r\n              createPopperFunction = createPopper;\r\n          }\r\n          if (createPopperFunction) {\r\n              this._popperInstance = createPopperFunction(element, widget, options);\r\n          }\r\n      }\r\n      updatePopup() {\r\n          this._popperInstance?.update();\r\n      }\r\n      /**\r\n       * Changes the calendar view mode. E.g. month <-> year\r\n       * @param direction -/+ number to move currentViewMode\r\n       * @private\r\n       */\r\n      _showMode(direction) {\r\n          if (!this.widget) {\r\n              return;\r\n          }\r\n          if (direction) {\r\n              const max = Math.max(this.optionsStore.minimumCalendarViewMode, Math.min(3, this.optionsStore.currentCalendarViewMode + direction));\r\n              if (this.optionsStore.currentCalendarViewMode == max)\r\n                  return;\r\n              this.optionsStore.currentCalendarViewMode = max;\r\n          }\r\n          this.widget\r\n              .querySelectorAll(`.${Namespace.css.dateContainer} > div:not(.${Namespace.css.calendarHeader}), .${Namespace.css.timeContainer} > div:not(.${Namespace.css.clockContainer})`)\r\n              .forEach((e) => (e.style.display = 'none'));\r\n          const datePickerMode = CalendarModes[this.optionsStore.currentCalendarViewMode];\r\n          let picker = this.widget.querySelector(`.${datePickerMode.className}`);\r\n          switch (datePickerMode.className) {\r\n              case Namespace.css.decadesContainer:\r\n                  this.decadeDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Namespace.css.yearsContainer:\r\n                  this.yearDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Namespace.css.monthsContainer:\r\n                  this.monthDisplay._update(this.widget, this.paint);\r\n                  break;\r\n              case Namespace.css.daysContainer:\r\n                  this.dateDisplay._update(this.widget, this.paint);\r\n                  break;\r\n          }\r\n          picker.style.display = 'grid';\r\n          if (this.optionsStore.options.display.sideBySide)\r\n              (this.widget.querySelectorAll(`.${Namespace.css.clockContainer}`)[0]).style.display = 'grid';\r\n          this._updateCalendarHeader();\r\n          this._eventEmitters.viewUpdate.emit();\r\n      }\r\n      /**\r\n       * Changes the theme. E.g. light, dark or auto\r\n       * @param theme the theme name\r\n       * @private\r\n       */\r\n      _updateTheme(theme) {\r\n          if (!this.widget) {\r\n              return;\r\n          }\r\n          if (theme) {\r\n              if (this.optionsStore.options.display.theme === theme)\r\n                  return;\r\n              this.optionsStore.options.display.theme = theme;\r\n          }\r\n          this.widget.classList.remove('light', 'dark');\r\n          this.widget.classList.add(this._getThemeClass());\r\n          if (this.optionsStore.options.display.theme === 'auto') {\r\n              window\r\n                  .matchMedia(Namespace.css.isDarkPreferredQuery)\r\n                  .addEventListener('change', () => this._updateTheme());\r\n          }\r\n          else {\r\n              window\r\n                  .matchMedia(Namespace.css.isDarkPreferredQuery)\r\n                  .removeEventListener('change', () => this._updateTheme());\r\n          }\r\n      }\r\n      _getThemeClass() {\r\n          const currentTheme = this.optionsStore.options.display.theme || 'auto';\r\n          const isDarkMode = window.matchMedia &&\r\n              window.matchMedia(Namespace.css.isDarkPreferredQuery).matches;\r\n          switch (currentTheme) {\r\n              case 'light':\r\n                  return Namespace.css.lightTheme;\r\n              case 'dark':\r\n                  return Namespace.css.darkTheme;\r\n              case 'auto':\r\n                  return isDarkMode ? Namespace.css.darkTheme : Namespace.css.lightTheme;\r\n          }\r\n      }\r\n      _updateCalendarHeader() {\r\n          const showing = [\r\n              ...this.widget.querySelector(`.${Namespace.css.dateContainer} div[style*=\"display: grid\"]`).classList,\r\n          ].find((x) => x.startsWith(Namespace.css.dateContainer));\r\n          const [previous, switcher, next] = this.widget\r\n              .getElementsByClassName(Namespace.css.calendarHeader)[0]\r\n              .getElementsByTagName('div');\r\n          switch (showing) {\r\n              case Namespace.css.decadesContainer:\r\n                  previous.setAttribute('title', this.optionsStore.options.localization.previousCentury);\r\n                  switcher.setAttribute('title', '');\r\n                  next.setAttribute('title', this.optionsStore.options.localization.nextCentury);\r\n                  break;\r\n              case Namespace.css.yearsContainer:\r\n                  previous.setAttribute('title', this.optionsStore.options.localization.previousDecade);\r\n                  switcher.setAttribute('title', this.optionsStore.options.localization.selectDecade);\r\n                  next.setAttribute('title', this.optionsStore.options.localization.nextDecade);\r\n                  break;\r\n              case Namespace.css.monthsContainer:\r\n                  previous.setAttribute('title', this.optionsStore.options.localization.previousYear);\r\n                  switcher.setAttribute('title', this.optionsStore.options.localization.selectYear);\r\n                  next.setAttribute('title', this.optionsStore.options.localization.nextYear);\r\n                  break;\r\n              case Namespace.css.daysContainer:\r\n                  previous.setAttribute('title', this.optionsStore.options.localization.previousMonth);\r\n                  switcher.setAttribute('title', this.optionsStore.options.localization.selectMonth);\r\n                  next.setAttribute('title', this.optionsStore.options.localization.nextMonth);\r\n                  switcher.setAttribute(showing, this.optionsStore.viewDate.format(this.optionsStore.options.localization.dayViewHeaderFormat));\r\n                  break;\r\n          }\r\n          switcher.innerText = switcher.getAttribute(showing);\r\n      }\r\n      /**\r\n       * Hides the picker if needed.\r\n       * Remove document click event to hide when clicking outside the picker.\r\n       * fires Events#hide\r\n       */\r\n      hide() {\r\n          if (!this.widget || !this._isVisible)\r\n              return;\r\n          this.widget.classList.remove(Namespace.css.show);\r\n          if (this._isVisible) {\r\n              this._eventEmitters.triggerEvent.emit({\r\n                  type: Namespace.events.hide,\r\n                  date: this.optionsStore.unset\r\n                      ? null\r\n                      : this.dates.lastPicked\r\n                          ? this.dates.lastPicked.clone\r\n                          : void 0,\r\n              });\r\n              this._isVisible = false;\r\n          }\r\n          document.removeEventListener('click', this._documentClickEvent);\r\n      }\r\n      /**\r\n       * Toggles the picker's open state. Fires a show/hide event depending.\r\n       */\r\n      toggle() {\r\n          return this._isVisible ? this.hide() : this.show();\r\n      }\r\n      /**\r\n       * Removes document and data-action click listener and reset the widget\r\n       * @private\r\n       */\r\n      _dispose() {\r\n          document.removeEventListener('click', this._documentClickEvent);\r\n          if (!this.widget)\r\n              return;\r\n          this.widget\r\n              .querySelectorAll('[data-action]')\r\n              .forEach((element) => element.removeEventListener('click', this._actionsClickEvent));\r\n          this.widget.parentNode.removeChild(this.widget);\r\n          this._widget = undefined;\r\n      }\r\n      /**\r\n       * Builds the widgets html template.\r\n       * @private\r\n       */\r\n      _buildWidget() {\r\n          const template = document.createElement('div');\r\n          template.classList.add(Namespace.css.widget);\r\n          const dateView = document.createElement('div');\r\n          dateView.classList.add(Namespace.css.dateContainer);\r\n          dateView.append(this.getHeadTemplate(), this.decadeDisplay.getPicker(), this.yearDisplay.getPicker(), this.monthDisplay.getPicker(), this.dateDisplay.getPicker());\r\n          const timeView = document.createElement('div');\r\n          timeView.classList.add(Namespace.css.timeContainer);\r\n          timeView.appendChild(this.timeDisplay.getPicker(this._iconTag.bind(this)));\r\n          timeView.appendChild(this.hourDisplay.getPicker());\r\n          timeView.appendChild(this.minuteDisplay.getPicker());\r\n          timeView.appendChild(this.secondDisplay.getPicker());\r\n          const toolbar = document.createElement('div');\r\n          toolbar.classList.add(Namespace.css.toolbar);\r\n          toolbar.append(...this.getToolbarElements());\r\n          if (this.optionsStore.options.display.inline) {\r\n              template.classList.add(Namespace.css.inline);\r\n          }\r\n          if (this.optionsStore.options.display.calendarWeeks) {\r\n              template.classList.add('calendarWeeks');\r\n          }\r\n          if (this.optionsStore.options.display.sideBySide &&\r\n              this._hasDate &&\r\n              this._hasTime) {\r\n              template.classList.add(Namespace.css.sideBySide);\r\n              if (this.optionsStore.options.display.toolbarPlacement === 'top') {\r\n                  template.appendChild(toolbar);\r\n              }\r\n              const row = document.createElement('div');\r\n              row.classList.add('td-row');\r\n              dateView.classList.add('td-half');\r\n              timeView.classList.add('td-half');\r\n              row.appendChild(dateView);\r\n              row.appendChild(timeView);\r\n              template.appendChild(row);\r\n              if (this.optionsStore.options.display.toolbarPlacement === 'bottom') {\r\n                  template.appendChild(toolbar);\r\n              }\r\n              this._widget = template;\r\n              return;\r\n          }\r\n          if (this.optionsStore.options.display.toolbarPlacement === 'top') {\r\n              template.appendChild(toolbar);\r\n          }\r\n          if (this._hasDate) {\r\n              if (this._hasTime) {\r\n                  dateView.classList.add(Namespace.css.collapse);\r\n                  if (this.optionsStore.options.display.viewMode !== 'clock')\r\n                      dateView.classList.add(Namespace.css.show);\r\n              }\r\n              template.appendChild(dateView);\r\n          }\r\n          if (this._hasTime) {\r\n              if (this._hasDate) {\r\n                  timeView.classList.add(Namespace.css.collapse);\r\n                  if (this.optionsStore.options.display.viewMode === 'clock')\r\n                      timeView.classList.add(Namespace.css.show);\r\n              }\r\n              template.appendChild(timeView);\r\n          }\r\n          if (this.optionsStore.options.display.toolbarPlacement === 'bottom') {\r\n              template.appendChild(toolbar);\r\n          }\r\n          const arrow = document.createElement('div');\r\n          arrow.classList.add('arrow');\r\n          arrow.setAttribute('data-popper-arrow', '');\r\n          template.appendChild(arrow);\r\n          this._widget = template;\r\n      }\r\n      /**\r\n       * Returns true if the hours, minutes, or seconds component is turned on\r\n       */\r\n      get _hasTime() {\r\n          return (this.optionsStore.options.display.components.clock &&\r\n              (this.optionsStore.options.display.components.hours ||\r\n                  this.optionsStore.options.display.components.minutes ||\r\n                  this.optionsStore.options.display.components.seconds));\r\n      }\r\n      /**\r\n       * Returns true if the year, month, or date component is turned on\r\n       */\r\n      get _hasDate() {\r\n          return (this.optionsStore.options.display.components.calendar &&\r\n              (this.optionsStore.options.display.components.year ||\r\n                  this.optionsStore.options.display.components.month ||\r\n                  this.optionsStore.options.display.components.date));\r\n      }\r\n      /**\r\n       * Get the toolbar html based on options like buttons.today\r\n       * @private\r\n       */\r\n      getToolbarElements() {\r\n          const toolbar = [];\r\n          if (this.optionsStore.options.display.buttons.today) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.today);\r\n              div.setAttribute('title', this.optionsStore.options.localization.today);\r\n              div.appendChild(this._iconTag(this.optionsStore.options.display.icons.today));\r\n              toolbar.push(div);\r\n          }\r\n          if (!this.optionsStore.options.display.sideBySide &&\r\n              this._hasDate &&\r\n              this._hasTime) {\r\n              let title, icon;\r\n              if (this.optionsStore.options.display.viewMode === 'clock') {\r\n                  title = this.optionsStore.options.localization.selectDate;\r\n                  icon = this.optionsStore.options.display.icons.date;\r\n              }\r\n              else {\r\n                  title = this.optionsStore.options.localization.selectTime;\r\n                  icon = this.optionsStore.options.display.icons.time;\r\n              }\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.togglePicker);\r\n              div.setAttribute('title', title);\r\n              div.appendChild(this._iconTag(icon));\r\n              toolbar.push(div);\r\n          }\r\n          if (this.optionsStore.options.display.buttons.clear) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.clear);\r\n              div.setAttribute('title', this.optionsStore.options.localization.clear);\r\n              div.appendChild(this._iconTag(this.optionsStore.options.display.icons.clear));\r\n              toolbar.push(div);\r\n          }\r\n          if (this.optionsStore.options.display.buttons.close) {\r\n              const div = document.createElement('div');\r\n              div.setAttribute('data-action', ActionTypes$1.close);\r\n              div.setAttribute('title', this.optionsStore.options.localization.close);\r\n              div.appendChild(this._iconTag(this.optionsStore.options.display.icons.close));\r\n              toolbar.push(div);\r\n          }\r\n          return toolbar;\r\n      }\r\n      /***\r\n       * Builds the base header template with next and previous icons\r\n       * @private\r\n       */\r\n      getHeadTemplate() {\r\n          const calendarHeader = document.createElement('div');\r\n          calendarHeader.classList.add(Namespace.css.calendarHeader);\r\n          const previous = document.createElement('div');\r\n          previous.classList.add(Namespace.css.previous);\r\n          previous.setAttribute('data-action', ActionTypes$1.previous);\r\n          previous.appendChild(this._iconTag(this.optionsStore.options.display.icons[document.documentElement.dir === 'rtl' ? 'next' : 'previous']) //***\r\n          );\r\n          const switcher = document.createElement('div');\r\n          switcher.classList.add(Namespace.css.switch);\r\n          switcher.setAttribute('data-action', ActionTypes$1.changeCalendarView);\r\n          const next = document.createElement('div');\r\n          next.classList.add(Namespace.css.next);\r\n          next.setAttribute('data-action', ActionTypes$1.next);\r\n          next.appendChild(this._iconTag(this.optionsStore.options.display.icons[document.documentElement.dir === 'rtl' ? 'previous' : 'next']) //***\r\n          );\r\n          calendarHeader.append(previous, switcher, next);\r\n          return calendarHeader;\r\n      }\r\n      /**\r\n       * Builds an icon tag as either an `<i>`\r\n       * or with icons.type is `sprites` then a svg tag instead\r\n       * @param iconClass\r\n       * @private\r\n       */\r\n      _iconTag(iconClass) {\r\n          if (this.optionsStore.options.display.icons.type === 'sprites') {\r\n              const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n              const icon = document.createElementNS('http://www.w3.org/2000/svg', 'use');\r\n              icon.setAttribute('xlink:href', iconClass); // Deprecated. Included for backward compatibility\r\n              icon.setAttribute('href', iconClass);\r\n              svg.appendChild(icon);\r\n              return svg;\r\n          }\r\n          const icon = document.createElement('i');\r\n          icon.classList.add(...iconClass.split(' '));\r\n          return icon;\r\n      }\r\n      /**\r\n       * Causes the widget to get rebuilt on next show. If the picker is already open\r\n       * then hide and reshow it.\r\n       * @private\r\n       */\r\n      _rebuild() {\r\n          const wasVisible = this._isVisible;\r\n          if (wasVisible)\r\n              this.hide();\r\n          this._dispose();\r\n          if (wasVisible) {\r\n              this.show();\r\n          }\r\n      }\r\n  }\n\n  /**\r\n   *\r\n   */\r\n  class Actions {\r\n      constructor() {\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.validation = serviceLocator.locate(Validation);\r\n          this.display = serviceLocator.locate(Display);\r\n          this._eventEmitters = serviceLocator.locate(EventEmitters);\r\n          this._eventEmitters.action.subscribe((result) => {\r\n              this.do(result.e, result.action);\r\n          });\r\n      }\r\n      /**\r\n       * Performs the selected `action`. See ActionTypes\r\n       * @param e This is normally a click event\r\n       * @param action If not provided, then look for a [data-action]\r\n       */\r\n      do(e, action) {\r\n          const currentTarget = e?.currentTarget;\r\n          if (currentTarget?.classList?.contains(Namespace.css.disabled))\r\n              return false;\r\n          action = action || currentTarget?.dataset?.action;\r\n          const lastPicked = (this.dates.lastPicked || this.optionsStore.viewDate)\r\n              .clone;\r\n          switch (action) {\r\n              case ActionTypes$1.next:\r\n              case ActionTypes$1.previous:\r\n                  this.handleNextPrevious(action);\r\n                  break;\r\n              case ActionTypes$1.changeCalendarView:\r\n                  this.display._showMode(1);\r\n                  this.display._updateCalendarHeader();\r\n                  break;\r\n              case ActionTypes$1.selectMonth:\r\n              case ActionTypes$1.selectYear:\r\n              case ActionTypes$1.selectDecade:\r\n                  const value = +currentTarget.dataset.value;\r\n                  switch (action) {\r\n                      case ActionTypes$1.selectMonth:\r\n                          this.optionsStore.viewDate.month = value;\r\n                          break;\r\n                      case ActionTypes$1.selectYear:\r\n                      case ActionTypes$1.selectDecade:\r\n                          this.optionsStore.viewDate.year = value;\r\n                          break;\r\n                  }\r\n                  if (this.optionsStore.currentCalendarViewMode ===\r\n                      this.optionsStore.minimumCalendarViewMode) {\r\n                      this.dates.setValue(this.optionsStore.viewDate, this.dates.lastPickedIndex);\r\n                      if (!this.optionsStore.options.display.inline) {\r\n                          this.display.hide();\r\n                      }\r\n                  }\r\n                  else {\r\n                      this.display._showMode(-1);\r\n                  }\r\n                  break;\r\n              case ActionTypes$1.selectDay:\r\n                  const day = this.optionsStore.viewDate.clone;\r\n                  if (currentTarget.classList.contains(Namespace.css.old)) {\r\n                      day.manipulate(-1, Unit.month);\r\n                  }\r\n                  if (currentTarget.classList.contains(Namespace.css.new)) {\r\n                      day.manipulate(1, Unit.month);\r\n                  }\r\n                  day.date = +currentTarget.dataset.day;\r\n                  let index = 0;\r\n                  if (this.optionsStore.options.multipleDates) {\r\n                      index = this.dates.pickedIndex(day, Unit.date);\r\n                      if (index !== -1) {\r\n                          this.dates.setValue(null, index); //deselect multi-date\r\n                      }\r\n                      else {\r\n                          this.dates.setValue(day, this.dates.lastPickedIndex + 1);\r\n                      }\r\n                  }\r\n                  else {\r\n                      this.dates.setValue(day, this.dates.lastPickedIndex);\r\n                  }\r\n                  if (!this.display._hasTime &&\r\n                      !this.optionsStore.options.display.keepOpen &&\r\n                      !this.optionsStore.options.display.inline &&\r\n                      !this.optionsStore.options.multipleDates) {\r\n                      this.display.hide();\r\n                  }\r\n                  break;\r\n              case ActionTypes$1.selectHour:\r\n                  let hour = +currentTarget.dataset.value;\r\n                  if (lastPicked.hours >= 12 &&\r\n                      !this.optionsStore.options.display.components.useTwentyfourHour)\r\n                      hour += 12;\r\n                  lastPicked.hours = hour;\r\n                  this.dates.setValue(lastPicked, this.dates.lastPickedIndex);\r\n                  this.hideOrClock(e);\r\n                  break;\r\n              case ActionTypes$1.selectMinute:\r\n                  lastPicked.minutes = +currentTarget.dataset.value;\r\n                  this.dates.setValue(lastPicked, this.dates.lastPickedIndex);\r\n                  this.hideOrClock(e);\r\n                  break;\r\n              case ActionTypes$1.selectSecond:\r\n                  lastPicked.seconds = +currentTarget.dataset.value;\r\n                  this.dates.setValue(lastPicked, this.dates.lastPickedIndex);\r\n                  this.hideOrClock(e);\r\n                  break;\r\n              case ActionTypes$1.incrementHours:\r\n                  this.manipulateAndSet(lastPicked, Unit.hours);\r\n                  break;\r\n              case ActionTypes$1.incrementMinutes:\r\n                  this.manipulateAndSet(lastPicked, Unit.minutes, this.optionsStore.options.stepping);\r\n                  break;\r\n              case ActionTypes$1.incrementSeconds:\r\n                  this.manipulateAndSet(lastPicked, Unit.seconds);\r\n                  break;\r\n              case ActionTypes$1.decrementHours:\r\n                  this.manipulateAndSet(lastPicked, Unit.hours, -1);\r\n                  break;\r\n              case ActionTypes$1.decrementMinutes:\r\n                  this.manipulateAndSet(lastPicked, Unit.minutes, this.optionsStore.options.stepping * -1);\r\n                  break;\r\n              case ActionTypes$1.decrementSeconds:\r\n                  this.manipulateAndSet(lastPicked, Unit.seconds, -1);\r\n                  break;\r\n              case ActionTypes$1.toggleMeridiem:\r\n                  this.manipulateAndSet(lastPicked, Unit.hours, this.dates.lastPicked.hours >= 12 ? -12 : 12);\r\n                  break;\r\n              case ActionTypes$1.togglePicker:\r\n                  if (currentTarget.getAttribute('title') ===\r\n                      this.optionsStore.options.localization.selectDate) {\r\n                      currentTarget.setAttribute('title', this.optionsStore.options.localization.selectTime);\r\n                      currentTarget.innerHTML = this.display._iconTag(this.optionsStore.options.display.icons.time).outerHTML;\r\n                      this.display._updateCalendarHeader();\r\n                      this.optionsStore.refreshCurrentView();\r\n                  }\r\n                  else {\r\n                      currentTarget.setAttribute('title', this.optionsStore.options.localization.selectDate);\r\n                      currentTarget.innerHTML = this.display._iconTag(this.optionsStore.options.display.icons.date).outerHTML;\r\n                      if (this.display._hasTime) {\r\n                          this.handleShowClockContainers(ActionTypes$1.showClock);\r\n                          this.display._update('clock');\r\n                      }\r\n                  }\r\n                  this.display.widget\r\n                      .querySelectorAll(`.${Namespace.css.dateContainer}, .${Namespace.css.timeContainer}`)\r\n                      .forEach((htmlElement) => Collapse.toggle(htmlElement));\r\n                  this._eventEmitters.viewUpdate.emit();\r\n                  break;\r\n              case ActionTypes$1.showClock:\r\n              case ActionTypes$1.showHours:\r\n              case ActionTypes$1.showMinutes:\r\n              case ActionTypes$1.showSeconds:\r\n                  //make sure the clock is actually displaying\r\n                  if (!this.optionsStore.options.display.sideBySide && this.optionsStore.currentView !== 'clock') {\r\n                      //hide calendar\r\n                      Collapse.hideImmediately(this.display.widget.querySelector(`div.${Namespace.css.dateContainer}`));\r\n                      //show clock\r\n                      Collapse.showImmediately(this.display.widget.querySelector(`div.${Namespace.css.timeContainer}`));\r\n                  }\r\n                  this.handleShowClockContainers(action);\r\n                  break;\r\n              case ActionTypes$1.clear:\r\n                  this.dates.setValue(null);\r\n                  this.display._updateCalendarHeader();\r\n                  break;\r\n              case ActionTypes$1.close:\r\n                  this.display.hide();\r\n                  break;\r\n              case ActionTypes$1.today:\r\n                  const today = new DateTime().setLocale(this.optionsStore.options.localization.locale);\r\n                  this._eventEmitters.updateViewDate.emit(today);\r\n                  //todo this this really a good idea?\r\n                  if (this.validation.isValid(today, Unit.date))\r\n                      this.dates.setValue(today, this.dates.lastPickedIndex);\r\n                  break;\r\n          }\r\n      }\r\n      handleShowClockContainers(action) {\r\n          if (!this.display._hasTime) {\r\n              Namespace.errorMessages.throwError('Cannot show clock containers when time is disabled.');\r\n              return;\r\n          }\r\n          this.optionsStore.currentView = 'clock';\r\n          this.display.widget\r\n              .querySelectorAll(`.${Namespace.css.timeContainer} > div`)\r\n              .forEach((htmlElement) => (htmlElement.style.display = 'none'));\r\n          let classToUse = '';\r\n          switch (action) {\r\n              case ActionTypes$1.showClock:\r\n                  classToUse = Namespace.css.clockContainer;\r\n                  this.display._update('clock');\r\n                  break;\r\n              case ActionTypes$1.showHours:\r\n                  classToUse = Namespace.css.hourContainer;\r\n                  this.display._update(Unit.hours);\r\n                  break;\r\n              case ActionTypes$1.showMinutes:\r\n                  classToUse = Namespace.css.minuteContainer;\r\n                  this.display._update(Unit.minutes);\r\n                  break;\r\n              case ActionTypes$1.showSeconds:\r\n                  classToUse = Namespace.css.secondContainer;\r\n                  this.display._update(Unit.seconds);\r\n                  break;\r\n          }\r\n          (this.display.widget.getElementsByClassName(classToUse)[0]).style.display = 'grid';\r\n      }\r\n      handleNextPrevious(action) {\r\n          const { unit, step } = CalendarModes[this.optionsStore.currentCalendarViewMode];\r\n          if (action === ActionTypes$1.next)\r\n              this.optionsStore.viewDate.manipulate(step, unit);\r\n          else\r\n              this.optionsStore.viewDate.manipulate(step * -1, unit);\r\n          this._eventEmitters.viewUpdate.emit();\r\n          this.display._showMode();\r\n      }\r\n      /**\r\n       * After setting the value it will either show the clock or hide the widget.\r\n       * @param e\r\n       */\r\n      hideOrClock(e) {\r\n          if (this.optionsStore.options.display.components.useTwentyfourHour &&\r\n              !this.optionsStore.options.display.components.minutes &&\r\n              !this.optionsStore.options.display.keepOpen &&\r\n              !this.optionsStore.options.display.inline) {\r\n              this.display.hide();\r\n          }\r\n          else {\r\n              this.do(e, ActionTypes$1.showClock);\r\n          }\r\n      }\r\n      /**\r\n       * Common function to manipulate {@link lastPicked} by `unit`.\r\n       * @param lastPicked\r\n       * @param unit\r\n       * @param value Value to change by\r\n       */\r\n      manipulateAndSet(lastPicked, unit, value = 1) {\r\n          const newDate = lastPicked.manipulate(value, unit);\r\n          if (this.validation.isValid(newDate, unit)) {\r\n              this.dates.setValue(newDate, this.dates.lastPickedIndex);\r\n          }\r\n      }\r\n  }\n\n  /**\r\n   * A robust and powerful date/time picker component.\r\n   */\r\n  class TempusDominus {\r\n      constructor(element, options = {}) {\r\n          this._subscribers = {};\r\n          this._isDisabled = false;\r\n          /**\r\n           * Event for when the input field changes. This is a class level method so there's\r\n           * something for the remove listener function.\r\n           * @private\r\n           */\r\n          this._inputChangeEvent = (event) => {\r\n              const internallyTriggered = event?.detail;\r\n              if (internallyTriggered)\r\n                  return;\r\n              const setViewDate = () => {\r\n                  if (this.dates.lastPicked)\r\n                      this.optionsStore.viewDate = this.dates.lastPicked.clone;\r\n              };\r\n              const value = this.optionsStore.input.value;\r\n              if (this.optionsStore.options.multipleDates) {\r\n                  try {\r\n                      const valueSplit = value.split(this.optionsStore.options.multipleDatesSeparator);\r\n                      for (let i = 0; i < valueSplit.length; i++) {\r\n                          this.dates.setFromInput(valueSplit[i], i);\r\n                      }\r\n                      setViewDate();\r\n                  }\r\n                  catch {\r\n                      console.warn('TD: Something went wrong trying to set the multipleDates values from the input field.');\r\n                  }\r\n              }\r\n              else {\r\n                  this.dates.setFromInput(value, 0);\r\n                  setViewDate();\r\n              }\r\n          };\r\n          /**\r\n           * Event for when the toggle is clicked. This is a class level method so there's\r\n           * something for the remove listener function.\r\n           * @private\r\n           */\r\n          this._toggleClickEvent = () => {\r\n              if (this.optionsStore.element?.disabled || this.optionsStore.input?.disabled)\r\n                  return;\r\n              this.toggle();\r\n          };\r\n          setupServiceLocator();\r\n          this._eventEmitters = serviceLocator.locate(EventEmitters);\r\n          this.optionsStore = serviceLocator.locate(OptionsStore);\r\n          this.display = serviceLocator.locate(Display);\r\n          this.dates = serviceLocator.locate(Dates);\r\n          this.actions = serviceLocator.locate(Actions);\r\n          if (!element) {\r\n              Namespace.errorMessages.mustProvideElement();\r\n          }\r\n          this.optionsStore.element = element;\r\n          this._initializeOptions(options, DefaultOptions, true);\r\n          this.optionsStore.viewDate.setLocale(this.optionsStore.options.localization.locale);\r\n          this.optionsStore.unset = true;\r\n          this._initializeInput();\r\n          this._initializeToggle();\r\n          if (this.optionsStore.options.display.inline)\r\n              this.display.show();\r\n          this._eventEmitters.triggerEvent.subscribe((e) => {\r\n              this._triggerEvent(e);\r\n          });\r\n          this._eventEmitters.viewUpdate.subscribe(() => {\r\n              this._viewUpdate();\r\n          });\r\n          this._eventEmitters.updateViewDate.subscribe(dateTime => {\r\n              this.viewDate = dateTime;\r\n          });\r\n      }\r\n      get viewDate() {\r\n          return this.optionsStore.viewDate;\r\n      }\r\n      set viewDate(value) {\r\n          this.optionsStore.viewDate = value;\r\n          this.optionsStore.viewDate.setLocale(this.optionsStore.options.localization.locale);\r\n          this.display._update(this.optionsStore.currentView === 'clock' ? 'clock' : 'calendar');\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Update the picker options. If `reset` is provide `options` will be merged with DefaultOptions instead.\r\n       * @param options\r\n       * @param reset\r\n       * @public\r\n       */\r\n      updateOptions(options, reset = false) {\r\n          if (reset)\r\n              this._initializeOptions(options, DefaultOptions);\r\n          else\r\n              this._initializeOptions(options, this.optionsStore.options);\r\n          this.display._rebuild();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Toggles the picker open or closed. If the picker is disabled, nothing will happen.\r\n       * @public\r\n       */\r\n      toggle() {\r\n          if (this._isDisabled)\r\n              return;\r\n          this.display.toggle();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Shows the picker unless the picker is disabled.\r\n       * @public\r\n       */\r\n      show() {\r\n          if (this._isDisabled)\r\n              return;\r\n          this.display.show();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Hides the picker unless the picker is disabled.\r\n       * @public\r\n       */\r\n      hide() {\r\n          this.display.hide();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Disables the picker and the target input field.\r\n       * @public\r\n       */\r\n      disable() {\r\n          this._isDisabled = true;\r\n          // todo this might be undesired. If a dev disables the input field to\r\n          // only allow using the picker, this will break that.\r\n          this.optionsStore.input?.setAttribute('disabled', 'disabled');\r\n          this.display.hide();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Enables the picker and the target input field.\r\n       * @public\r\n       */\r\n      enable() {\r\n          this._isDisabled = false;\r\n          this.optionsStore.input?.removeAttribute('disabled');\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Clears all the selected dates\r\n       * @public\r\n       */\r\n      clear() {\r\n          this.optionsStore.input.value = '';\r\n          this.dates.clear();\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Allows for a direct subscription to picker events, without having to use addEventListener on the element.\r\n       * @param eventTypes See Namespace.Events\r\n       * @param callbacks Function to call when event is triggered\r\n       * @public\r\n       */\r\n      subscribe(eventTypes, callbacks) {\r\n          if (typeof eventTypes === 'string') {\r\n              eventTypes = [eventTypes];\r\n          }\r\n          let callBackArray;\r\n          if (!Array.isArray(callbacks)) {\r\n              callBackArray = [callbacks];\r\n          }\r\n          else {\r\n              callBackArray = callbacks;\r\n          }\r\n          if (eventTypes.length !== callBackArray.length) {\r\n              Namespace.errorMessages.subscribeMismatch();\r\n          }\r\n          const returnArray = [];\r\n          for (let i = 0; i < eventTypes.length; i++) {\r\n              const eventType = eventTypes[i];\r\n              if (!Array.isArray(this._subscribers[eventType])) {\r\n                  this._subscribers[eventType] = [];\r\n              }\r\n              this._subscribers[eventType].push(callBackArray[i]);\r\n              returnArray.push({\r\n                  unsubscribe: this._unsubscribe.bind(this, eventType, this._subscribers[eventType].length - 1),\r\n              });\r\n              if (eventTypes.length === 1) {\r\n                  return returnArray[0];\r\n              }\r\n          }\r\n          return returnArray;\r\n      }\r\n      // noinspection JSUnusedGlobalSymbols\r\n      /**\r\n       * Hides the picker and removes event listeners\r\n       */\r\n      dispose() {\r\n          this.display.hide();\r\n          // this will clear the document click event listener\r\n          this.display._dispose();\r\n          this._eventEmitters.destroy();\r\n          this.optionsStore.input?.removeEventListener('change', this._inputChangeEvent);\r\n          if (this.optionsStore.options.allowInputToggle) {\r\n              this.optionsStore.input?.removeEventListener('click', this._toggleClickEvent);\r\n          }\r\n          this._toggle?.removeEventListener('click', this._toggleClickEvent);\r\n          this._subscribers = {};\r\n      }\r\n      /**\r\n       * Updates the options to use the provided language.\r\n       * THe language file must be loaded first.\r\n       * @param language\r\n       */\r\n      locale(language) {\r\n          let asked = loadedLocales[language];\r\n          if (!asked)\r\n              return;\r\n          this.updateOptions({\r\n              localization: asked,\r\n          });\r\n      }\r\n      /**\r\n       * Triggers an event like ChangeEvent when the picker has updated the value\r\n       * of a selected date.\r\n       * @param event Accepts a BaseEvent object.\r\n       * @private\r\n       */\r\n      _triggerEvent(event) {\r\n          event.viewMode = this.optionsStore.currentView;\r\n          const isChangeEvent = event.type === Namespace.events.change;\r\n          if (isChangeEvent) {\r\n              const { date, oldDate, isClear } = event;\r\n              if ((date && oldDate && date.isSame(oldDate)) ||\r\n                  (!isClear && !date && !oldDate)) {\r\n                  return;\r\n              }\r\n              this._handleAfterChangeEvent(event);\r\n              this.optionsStore.input?.dispatchEvent(new CustomEvent(event.type, { detail: event }));\r\n              this.optionsStore.input?.dispatchEvent(new CustomEvent('change', { detail: event }));\r\n          }\r\n          this.optionsStore.element.dispatchEvent(new CustomEvent(event.type, { detail: event }));\r\n          if (window.jQuery) {\r\n              const $ = window.jQuery;\r\n              if (isChangeEvent && this.optionsStore.input) {\r\n                  $(this.optionsStore.input).trigger(event);\r\n              }\r\n              else {\r\n                  $(this.optionsStore.element).trigger(event);\r\n              }\r\n          }\r\n          this._publish(event);\r\n      }\r\n      _publish(event) {\r\n          // return if event is not subscribed\r\n          if (!Array.isArray(this._subscribers[event.type])) {\r\n              return;\r\n          }\r\n          // Trigger callback for each subscriber\r\n          this._subscribers[event.type].forEach((callback) => {\r\n              callback(event);\r\n          });\r\n      }\r\n      /**\r\n       * Fires a ViewUpdate event when, for example, the month view is changed.\r\n       * @private\r\n       */\r\n      _viewUpdate() {\r\n          this._triggerEvent({\r\n              type: Namespace.events.update,\r\n              viewDate: this.optionsStore.viewDate.clone,\r\n          });\r\n      }\r\n      _unsubscribe(eventName, index) {\r\n          this._subscribers[eventName].splice(index, 1);\r\n      }\r\n      /**\r\n       * Merges two Option objects together and validates options type\r\n       * @param config new Options\r\n       * @param mergeTo Options to merge into\r\n       * @param includeDataset When true, the elements data-td attributes will be included in the\r\n       * @private\r\n       */\r\n      _initializeOptions(config, mergeTo, includeDataset = false) {\r\n          let newConfig = OptionConverter.deepCopy(config);\r\n          newConfig = OptionConverter._mergeOptions(newConfig, mergeTo);\r\n          if (includeDataset)\r\n              newConfig = OptionConverter._dataToOptions(this.optionsStore.element, newConfig);\r\n          OptionConverter._validateConflicts(newConfig);\r\n          newConfig.viewDate = newConfig.viewDate.setLocale(newConfig.localization.locale);\r\n          if (!this.optionsStore.viewDate.isSame(newConfig.viewDate)) {\r\n              this.optionsStore.viewDate = newConfig.viewDate;\r\n          }\r\n          /**\r\n           * Sets the minimum view allowed by the picker. For example the case of only\r\n           * allowing year and month to be selected but not date.\r\n           */\r\n          if (newConfig.display.components.year) {\r\n              this.optionsStore.minimumCalendarViewMode = 2;\r\n          }\r\n          if (newConfig.display.components.month) {\r\n              this.optionsStore.minimumCalendarViewMode = 1;\r\n          }\r\n          if (newConfig.display.components.date) {\r\n              this.optionsStore.minimumCalendarViewMode = 0;\r\n          }\r\n          this.optionsStore.currentCalendarViewMode = Math.max(this.optionsStore.minimumCalendarViewMode, this.optionsStore.currentCalendarViewMode);\r\n          // Update view mode if needed\r\n          if (CalendarModes[this.optionsStore.currentCalendarViewMode].name !==\r\n              newConfig.display.viewMode) {\r\n              this.optionsStore.currentCalendarViewMode = Math.max(CalendarModes.findIndex((x) => x.name === newConfig.display.viewMode), this.optionsStore.minimumCalendarViewMode);\r\n          }\r\n          if (this.display?.isVisible) {\r\n              this.display._update('all');\r\n          }\r\n          if (newConfig.display.components.useTwentyfourHour === undefined) {\r\n              newConfig.display.components.useTwentyfourHour = !!!newConfig.viewDate.parts()?.dayPeriod;\r\n          }\r\n          this.optionsStore.options = newConfig;\r\n      }\r\n      /**\r\n       * Checks if an input field is being used, attempts to locate one and sets an\r\n       * event listener if found.\r\n       * @private\r\n       */\r\n      _initializeInput() {\r\n          if (this.optionsStore.element.tagName == 'INPUT') {\r\n              this.optionsStore.input = this.optionsStore.element;\r\n          }\r\n          else {\r\n              let query = this.optionsStore.element.dataset.tdTargetInput;\r\n              if (query == undefined || query == 'nearest') {\r\n                  this.optionsStore.input =\r\n                      this.optionsStore.element.querySelector('input');\r\n              }\r\n              else {\r\n                  this.optionsStore.input =\r\n                      this.optionsStore.element.querySelector(query);\r\n              }\r\n          }\r\n          if (!this.optionsStore.input)\r\n              return;\r\n          if (!this.optionsStore.input.value && this.optionsStore.options.defaultDate)\r\n              this.optionsStore.input.value = this.dates.formatInput(this.optionsStore.options.defaultDate);\r\n          this.optionsStore.input.addEventListener('change', this._inputChangeEvent);\r\n          if (this.optionsStore.options.allowInputToggle) {\r\n              this.optionsStore.input.addEventListener('click', this._toggleClickEvent);\r\n          }\r\n          if (this.optionsStore.input.value) {\r\n              this._inputChangeEvent();\r\n          }\r\n      }\r\n      /**\r\n       * Attempts to locate a toggle for the picker and sets an event listener\r\n       * @private\r\n       */\r\n      _initializeToggle() {\r\n          if (this.optionsStore.options.display.inline)\r\n              return;\r\n          let query = this.optionsStore.element.dataset.tdTargetToggle;\r\n          if (query == 'nearest') {\r\n              query = '[data-td-toggle=\"datetimepicker\"]';\r\n          }\r\n          this._toggle =\r\n              query == undefined\r\n                  ? this.optionsStore.element\r\n                  : this.optionsStore.element.querySelector(query);\r\n          this._toggle.addEventListener('click', this._toggleClickEvent);\r\n      }\r\n      /**\r\n       * If the option is enabled this will render the clock view after a date pick.\r\n       * @param e change event\r\n       * @private\r\n       */\r\n      _handleAfterChangeEvent(e) {\r\n          if (\r\n          // options is disabled\r\n          !this.optionsStore.options.promptTimeOnDateChange ||\r\n              this.optionsStore.options.display.inline ||\r\n              this.optionsStore.options.display.sideBySide ||\r\n              // time is disabled\r\n              !this.display._hasTime ||\r\n              // clock component is already showing\r\n              this.display.widget\r\n                  ?.getElementsByClassName(Namespace.css.show)[0]\r\n                  .classList.contains(Namespace.css.timeContainer))\r\n              return;\r\n          // First time ever. If useCurrent option is set to true (default), do nothing\r\n          // because the first date is selected automatically.\r\n          // or date didn't change (time did) or date changed because time did.\r\n          if ((!e.oldDate && this.optionsStore.options.useCurrent) ||\r\n              (e.oldDate && e.date?.isSame(e.oldDate))) {\r\n              return;\r\n          }\r\n          clearTimeout(this._currentPromptTimeTimeout);\r\n          this._currentPromptTimeTimeout = setTimeout(() => {\r\n              if (this.display.widget) {\r\n                  this._eventEmitters.action.emit({\r\n                      e: {\r\n                          currentTarget: this.display.widget.querySelector(`.${Namespace.css.switch} div`),\r\n                      },\r\n                      action: ActionTypes$1.togglePicker,\r\n                  });\r\n              }\r\n          }, this.optionsStore.options.promptTimeOnDateChangeTransitionDelay);\r\n      }\r\n  }\r\n  /**\r\n   * Whenever a locale is loaded via a plugin then store it here based on the\r\n   * locale name. E.g. loadedLocales['ru']\r\n   */\r\n  const loadedLocales = {};\r\n  // noinspection JSUnusedGlobalSymbols\r\n  /**\r\n   * Called from a locale plugin.\r\n   * @param l locale object for localization options\r\n   */\r\n  const loadLocale = (l) => {\r\n      if (loadedLocales[l.name])\r\n          return;\r\n      loadedLocales[l.name] = l.localization;\r\n  };\r\n  /**\r\n   * A sets the global localization options to the provided locale name.\r\n   * `loadLocale` MUST be called first.\r\n   * @param l\r\n   */\r\n  const locale = (l) => {\r\n      let asked = loadedLocales[l];\r\n      if (!asked)\r\n          return;\r\n      DefaultOptions.localization = asked;\r\n  };\r\n  // noinspection JSUnusedGlobalSymbols\r\n  /**\r\n   * Called from a plugin to extend or override picker defaults.\r\n   * @param plugin\r\n   * @param option\r\n   */\r\n  const extend = function (plugin, option) {\r\n      if (!plugin)\r\n          return tempusDominus$1;\r\n      if (!plugin.installed) {\r\n          // install plugin only once\r\n          plugin(option, { TempusDominus, Dates, Display, DateTime, Namespace }, tempusDominus$1);\r\n          plugin.installed = true;\r\n      }\r\n      return tempusDominus$1;\r\n  };\r\n  const version = '6.2.7';\r\n  const tempusDominus$1 = {\r\n      TempusDominus,\r\n      extend,\r\n      loadLocale,\r\n      locale,\r\n      Namespace,\r\n      DefaultOptions,\r\n      DateTime,\r\n      Unit,\r\n      version\r\n  };\n\n  var _tempusDominus = {\n    __proto__: null,\n    TempusDominus: TempusDominus,\n    extend: extend,\n    loadLocale: loadLocale,\n    locale: locale,\n    Namespace: Namespace,\n    DefaultOptions: DefaultOptions,\n    DateTime: DateTime,\n    get Unit () { return Unit; },\n    version: version\n  };\n\n  var luxon_parse = (_, tdClasses, tdFactory) => {\r\n      tdClasses.Dates.prototype.setFromInput = function (value, index) {\r\n          let locale = this.optionsStore.options.localization.locale, format = this.optionsStore.options.localization.format || this.optionsStore.options.meta.format;\r\n          if (format) {\r\n              let opts = {\r\n                  locale\r\n              };\r\n              let parsedDate = new tdFactory.DateTime(luxon__namespace.DateTime.fromFormat(value, format, opts).toJSDate());\r\n              // Check if the date is valid (An invalid date object returns NaN for getTime() and NaN is the only object not strictly equal to itself.)\r\n              if (parsedDate && parsedDate.getTime() === parsedDate.getTime()) {\r\n                  let date = tdFactory.DateTime.convert(parsedDate, locale);\r\n                  this.setValue(date, index);\r\n              }\r\n              else {\r\n                  console.error('Luxon failed to parse the input date.');\r\n              }\r\n          }\r\n          else {\r\n              console.error('Missing format.');\r\n          }\r\n      };\r\n      tdClasses.Dates.prototype.formatInput = function (date) {\r\n          let locale = this.optionsStore.options.localization.locale, format = this.optionsStore.options.localization.format || this.optionsStore.options.meta.format;\r\n          if (format) {\r\n              let opts = {\r\n                  locale,\r\n                  outputCalendar: \"gregory\" // Make sure the date is converted back to \"gregory\" format\r\n              };\r\n              return date ? luxon__namespace.DateTime.fromJSDate(date, opts).toFormat(format) : \"\";\r\n          }\r\n          else {\r\n              console.error('Missing format.');\r\n          }\r\n      };\r\n  };\n\n  ///<reference src=\"js/tempus-dominus\"/>\n\n  const tempusDominus = _tempusDominus;\n\n  tempusDominus.extend(luxon_parse); //***\n  // tempusDominus.extend(fa_five); //*** for v2022 only\n\n  /*!\n    * Tempus Dominus v6.2.7 (https://getdatepicker.com/)\n    * Copyright 2013-2021 Jonathan Peterson\n    * Licensed under MIT (https://github.com/Eonasdan/tempus-dominus/blob/master/LICENSE)\n    */\n  tempusDominus.jQueryInterface = function (option, argument) {\n    if (this.length === 1) {\n      return tempusDominus.jQueryHandleThis(this, option, argument);\n    }\n    // \"this\" is jquery here\n    return this.each(function () {\n      tempusDominus.jQueryHandleThis(this, option, argument);\n    });\n  };\n\n  tempusDominus.jQueryHandleThis = function (me, option, argument) {\n    let data = $__default[\"default\"](me).data(tempusDominus.Namespace.dataKey);\n    if (typeof option === 'object') {\n          option = $__default[\"default\"].extend({}, tempusDominus.DefaultOptions, option);\n    }\n\n    if (!data) {\n      data = new tempusDominus.TempusDominus($__default[\"default\"](me)[0], option);\n      $__default[\"default\"](me).data(tempusDominus.Namespace.dataKey, data);\n    }\n\n    if (typeof option === 'string') {\n      if (data[option] === undefined) {\n        throw new Error(`No method named \"${option}\"`);\n      }\n      if (argument === undefined) {\n        return data[option]();\n      } else {\n        if (option === 'date') {\n          data.isDateUpdateThroughDateOptionFromClientCode = true;\n        }\n        const ret = data[option](argument);\n        data.isDateUpdateThroughDateOptionFromClientCode = false;\n        return ret;\n      }\n    }\n  };\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n  //*** $(document)\n  //   .on(\n  //     `click${tempusDominus.Namespace.events.key}.data-api`,\n  //     `[data-toggle=\"${tempusDominus.Namespace.dataKey}\"]`,\n  //     function () {\n  //       const $originalTarget = $(this),\n  //         $target = tempusDominus.getSelectorFromElement($originalTarget),\n  //         config = $target.data(tempusDominus.Namespace.dataKey);\n  //       if ($target.length === 0) {\n  //         return;\n  //       }\n  //       if (\n  //         config._options.allowInputToggle &&\n  //         $originalTarget.is('input[data-toggle=\"datetimepicker\"]')\n  //       ) {\n  //         return;\n  //       }\n  //       tempusDominus.jQueryInterface.call($target, 'toggle');\n  //     }\n  //   )\n  //   .on(\n  //     tempusDominus.Namespace.events.change,\n  //     `.${tempusDominus.Namespace.NAME}-input`,\n  //     function (event) {\n  //       const $target = tempusDominus.getSelectorFromElement($(this));\n  //       if ($target.length === 0 || event.isInit) {\n  //         return;\n  //       }\n  //       tempusDominus.jQueryInterface.call($target, '_change', event);\n  //     }\n  //   )\n  //   .on(\n  //     tempusDominus.Namespace.events.blur,\n  //     `.${tempusDominus.Namespace.NAME}-input`,\n  //     function (event) {\n  //       const $target = tempusDominus.getSelectorFromElement($(this)),\n  //         config = $target.data(tempusDominus.Namespace.dataKey);\n  //       if ($target.length === 0) {\n  //         return;\n  //       }\n  //       if (config._options.debug || window.debug) {\n  //         return;\n  //       }\n  //       tempusDominus.jQueryInterface.call($target, 'hide', event);\n  //     }\n  //   )\n  //   /*.on(tempusDominus.Namespace.Events.keydown, `.${tempusDominus.Namespace.NAME}-input`, function (event) {\n  //     const $target = tempusDominus.getSelectorFromElement($(this));\n  //     if ($target.length === 0) {\n  //       return;\n  //     }\n  //     tempusDominus.jQueryInterface.call($target, '_keydown', event);\n  //   })\n  //   .on(tempusDominus.Namespace.Events.keyup, `.${tempusDominus.Namespace.NAME}-input`, function (event) {\n  //     const $target = tempusDominus.getSelectorFromElement($(this));\n  //     if ($target.length === 0) {\n  //       return;\n  //     }\n  //     tempusDominus.jQueryInterface.call($target, '_keyup', event);\n  //   })*/\n  //   .on(\n  //     tempusDominus.Namespace.events.focus,\n  //     `.${tempusDominus.Namespace.NAME}-input`,\n  //     function (event) {\n  //       const $target = tempusDominus.getSelectorFromElement($(this)),\n  //         config = $target.data(tempusDominus.Namespace.dataKey);\n  //       if ($target.length === 0) {\n  //         return;\n  //       }\n  //       if (!config._options.allowInputToggle) {\n  //         return;\n  //       }\n  //       tempusDominus.jQueryInterface.call($target, 'show', event);\n  //     }\n  //   );\n  const name = 'tempusDominus';\n  const JQUERY_NO_CONFLICT = $__default[\"default\"].fn[name];\n  $__default[\"default\"].fn[name] = tempusDominus.jQueryInterface;\n  $__default[\"default\"].fn[name].Constructor = tempusDominus.TempusDominus;\n  $__default[\"default\"].fn[name].noConflict = function () {\n    $__default[\"default\"].fn[name] = JQUERY_NO_CONFLICT;\n    return tempusDominus.jQueryInterface;\n  };\n\n  return tempusDominus;\n\n})(jQuery, luxon);\n"],"mappings":"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"}